{
  
    
        "post0": {
            "title": "Unit 3 Sections 12-13 Hacks",
            "content": "3.12 Homework Part 1 . Problem 1: This problem involves parameters . Qais is writing code to calculate formulas from his math class. He’s currently working on a procedure to calculate average speed, based on this formula: . Average speed= . Total Time/Total Distance . Highlight which of these is the best procedure for calculating and displaying average speed. PROCEDURE calcAvgSpeed (distance, time) { DISPLAY (distance/time) } PROCEDURE calcAvgSpeed (distance) { DISPLAY (distance/time) } PROCEDURE calcAvgSpeed (distance, time) { DISPLAY (time/distance) } . Question 1 HACK . isCold = True isRaining = True stayInside = False if ((isCold) or (isRaining)) : stayInside = True else: stayInside = False print(&quot;It is cold=&quot; + str(isCold) + &quot; and raining=&quot; + str(isRaining) + &quot; so stayInside=&quot; + str(stayInside)) . Question 2 HACK . import random def player_turn(): greatest_number = 0 for i in range(4): new_number = random.randint(1, 10) if new_number &gt; greatest_number: greatest_number = new_number print(greatest_number) player_turn() player_turn() . Question 3 HACK . { if MOVE_FORWARD_ALLOWED{ moveForwards } else{ if TURN_RIGHT_ALLOWED{ turnright } if TURN_LEFT_ALLOWED{ turnleft } } } . Question 4 &amp; 5 . . Explanation: We would start our search for element 69 by looking at the middle index, 5 first (8 elements divide by 2, plus 1 index). We find 6. 6 being less than 69 would lead you to consider the greater than half. The middle index for this section is Seven (5+9 = 14/2 = 7). Index number seven is 11, which is lower than index number 69. The eighth index is next examined ((8+8)/2 = 8). We searched and discovered the right number because 8 = 69. . Question 6 Diagram . . Question 7 . Shown as below in alphabetical order, ascending, place these in this order. As numbers are greater, you can compare which numerical value of these ascii characters is greater, allowing these to be correctly compared. . [&quot;Market”, ”Ralphs”, “store”, &quot;Target”, ”Walmart”] . Question 8 HACK . The binary search automatically rules out half of the options with each iteration, it is much faster than sequential search. Since you begin at the middle index, you can either select the group that is higher or lower than the middle index. As a result, each time you divide, you will eliminate half of the potential outcomes. . Question 9 HACK . From the list [64,36,16,11,9], we should be looking for number 36. First, I would choose the middle element ((1+5)/2 = 3), and since 16 is less than 36, I would shift back (as the list is reversed). As a result, I would choose the second element (1+3/2 = 2), which equals 36, therefore it would take me just two tries to reach 36. .",
            "url": "https://beebadger.github.io/fastpages/unit%203%20sections%2012-13%20hacks/2022/12/12/Unit3Sec12And13Hacks.html",
            "relUrl": "/unit%203%20sections%2012-13%20hacks/2022/12/12/Unit3Sec12And13Hacks.html",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Hacks Five",
            "content": "Hacks Five . Question 1 HACK . isCold = True isRaining = True stayInside = False if ((isCold) or (isRaining)) : stayInside = True else: stayInside = False print(&quot;It is cold=&quot; + str(isCold) + &quot; and raining=&quot; + str(isRaining) + &quot; so stayInside=&quot; + str(stayInside)) . Question 2 HACK . import random def player_turn(): greatest_number = 0 for i in range(4): new_number = random.randint(1, 10) if new_number &gt; greatest_number: greatest_number = new_number print(greatest_number) player_turn() player_turn() . Question 3 HACK . { if MOVE_FORWARD_ALLOWED{ moveForwards } else{ if TURN_RIGHT_ALLOWED{ turnright } if TURN_LEFT_ALLOWED{ turnleft } } } . Question 4 &amp; 5 . . Explanation: We would start our search for element 69 by looking at the middle index, 5 first (8 elements divide by 2, plus 1 index). We find 6. 6 being less than 69 would lead you to consider the greater than half. The middle index for this section is Seven (5+9 = 14/2 = 7). Index number seven is 11, which is lower than index number 69. The eighth index is next examined ((8+8)/2 = 8). We searched and discovered the right number because 8 = 69. . Question 6 Diagram . . Question 7 . Shown as below in alphabetical order, ascending, place these in this order. As numbers are greater, you can compare which numerical value of these ascii characters is greater, allowing these to be correctly compared. . [&quot;Market”, ”Ralphs”, “store”, &quot;Target”, ”Walmart”] . Question 8 HACK . The binary search automatically rules out half of the options with each iteration, it is much faster than sequential search. Since you begin at the middle index, you can either select the group that is higher or lower than the middle index. As a result, each time you divide, you will eliminate half of the potential outcomes. . Question 9 HACK . From the list [64,36,16,11,9], we should be looking for number 36. First, I would choose the middle element ((1+5)/2 = 3), and since 16 is less than 36, I would shift back (as the list is reversed). As a result, I would choose the second element (1+3/2 = 2), which equals 36, therefore it would take me just two tries to reach 36. .",
            "url": "https://beebadger.github.io/fastpages/hacks%20five/2022/12/12/Hacks-Five.html",
            "relUrl": "/hacks%20five/2022/12/12/Hacks-Five.html",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Unit 3 Sections 5-7 Hacks",
            "content": "For hacks, make a copy of this notebook and answer the questions or complete the code, as described in comments. Additionally, blog about any missed questions, or what you learned from this lesson. . 3.5 Hacks . Binary Practice . Using psuedocode operators determine if the statements are true or false. The number type will be indicated in parentheses. . 1. 90(D) = 1000(B) . A. True | B. False | . 2. 10(D) ≠ 0110(B) . A. True | B. False | . 3. 56(D) ≥ 111000(B) . A. True | B. False | . 3. 99(D) &lt; 1110011(B) . A. True | B. False | . Now, complete the binary truth tables . AND Operator Value 1 Value 2 Result . 1 | 1 | 1 | . 1 | 0 | 0 | . 0 | 1 | 0 | . 0 | 0 | 0 | . OR Operator Value 1 Value 2 Result . 1 | 1 | 1 | . 1 | 0 | 1 | . 0 | 1 | 1 | . 0 | 0 | 0 | . Not operator Not Value Result . Not | 1 | 0 | . Not | 0 | 1 | . . Python Practice . # Practice with these statements print(20 != 20) # How can you change the operator to print a value of False? x = 30 y = 20 z = 10 print(x &gt;= y + z) # How can this return true by only manipulating the operator? x = z # Manipulate the variables x, y, and z to make the below statement return true print(x == z) . False True True . 3.6 Hacks . AP Prep . 1. What is displayed by this code? . result &lt;-- 75 | IF result &lt; 80 { DISPLAY(&quot;Please schedule a retake.&quot;) } | ELSE { DISPLAY(&quot;Nice job!&quot;) } | . Nice job! | Display | Please schedule a retake. | 75 | 2. How is an if statement different from an if-else statement. . Extra words. | An if statement will only go through a process if a condition is met. An if-else statement will go through code no matter the conditions. | They are the exact same. | An if statement will go through the entire code segment every single time and the if-else statement is always used in an algorithm, no matter the conditions. | 3. What would be most appropriate for this situation? Ben wants to check his bank account. If his car fuel is full, he will go to the bank. Otherwise, he will go home. If he goes to the bank, he will withdraw money only if his balance is above $1000. . If statement | If-else statement | 4. What would be most appropriate for this situation? Luke wants to play basketball. If it is sunny outside he will go to the park to play basketball. . If statement | If-else statement | Using Python . animals = [&quot;lion&quot;, &quot;tiger&quot;, &quot;wildebeest&quot;, &quot;shark&quot;, &quot;jellyfish&quot;, &quot;blobfish&quot;, &quot;raven&quot;] for i in animals: if i == &quot;shark&quot;: # What boolean value does this statement cause? -- True print(&quot;Fun Fact: The smallest shark is the dwarf lantern shark, and it is small enough to hold in your hand!&quot;) else: print(i) if i == &quot;lion&quot; or &quot;wildebeest&quot;: print(&quot;This animal lives just south of the Sahara desert&quot;) # Practice # Using only one more if statement, alter the code to print out a statement saying if an animal lives in the desert, based on booleans . lion This animal lives just south of the Sahara desert tiger This animal lives just south of the Sahara desert wildebeest This animal lives just south of the Sahara desert Fun Fact: The smallest shark is the dwarf lantern shark, and it is small enough to hold in your hand! This animal lives just south of the Sahara desert jellyfish This animal lives just south of the Sahara desert blobfish This animal lives just south of the Sahara desert raven This animal lives just south of the Sahara desert . 3.7 Hacks . Exercise 1 . Create dictionaries for multiple food items, with the listed specifications Chicken Alfredo, Meat: Chicken, Time to Prepare: 60 minutes | Cheese Quesadilla, Meat: None, Time to Prepare: 10 minutes | Beef Wellington, Meat: Beef, Time to Prepare: 150 minutes | . | Used nested conditionals, determine which meal you can cook, given that a) you have no meat at home, and b) you only have 30 minutes to make the meal | . cheeseQuesadilla = { #Dictionary for cheese quesadilla &quot;meat&quot;: False, &quot;prepTime&quot;: 10, &quot;name&quot;: &quot;Cheese Quesadilla&quot; } chickenAlfredo = { #Dictionary for chicken alfredo &quot;meat&quot;: True, &quot;prepTime&quot;: 60, &quot;name&quot;: &quot;Chicken Alfredo&quot; } beefWellington = { #Dictionary for Beef wellington &quot;meat&quot;: True, &quot;prepTime&quot;: 150, &quot;name&quot;: &quot;Beef Wellington&quot; } def makeMeal(dish): # Defining cook function if dish[&quot;prepTime&quot;] &lt;= 30: if dish[&quot;meat&quot;] == False: print(&quot;You have enough food and time to make&quot;, dish[&quot;name&quot;]) else: print(&quot;You are out of meat and cannot make&quot;, dish[&quot;name&quot;] ) else: print(&quot;You are out of time and cannot make&quot;, dish[&quot;name&quot;] ) makeMeal(chickenAlfredo) makeMeal(cheeseQuesadilla) makeMeal(beefWellington) . You are out of time and cannot make Chicken Alfredo You have enough food and time to make Cheese Quesadilla You are out of time and cannot make Beef Wellington . Exercise 2 . Make a flowchart(here is one we used) and write pseudocode for the following scenario. . Mr. Yeung would like to grade live reviews. | He wants to see if each student has at least 2 issues on their project. If they don&#39;t they receive a score of 2.0. | If they have at least 2 issues, check that they have completed at least 5 of their scrumboard tasks. | If they have completed 5 scrumboard tasks, give the student a 2.7. If they have not completed 5 scrumboard tasks, give them a score of 2.5. If they have completed more than 5 tasks, give them a score of 3.0. | How much would a student with 3 issues and 1 complete scrumboard task receive? | .",
            "url": "https://beebadger.github.io/fastpages/csp/2022/12/04/assignment.html",
            "relUrl": "/csp/2022/12/04/assignment.html",
            "date": " • Dec 4, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Unit 3 Section 3-4 Hacks + Notes (VARDAAN AND NAVAN)",
            "content": "Hacks . title: Homework Assignment for 3.3-4 | tags: [hw] | toc: true | comments: true | . 3.3 Video 1 Hacks . Show two examples and label which one is sequence, selection, iteration numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] . . HACK . 3.3 Video 1 Hacks . list = [1, 2, 3, 4, 5] new_list = [] for num in list: if num % 4 == 2: new_list.append(&quot;new&quot;) print(new_list) . [&#39;new&#39;] . Over here, we have an iteration through the &quot;for num in list&quot;, as it is iterating through the entire list. . The &quot;if num % 4 == 2&quot; is a selection, because it is selecting a specific number. . Hack . i = 1 . 1 &lt; 5 . j = 1 . 1 &lt;= 1 . print –&gt; * . #iterate to next i . i = 2 . 2 &lt; 5 . j = 1 . 1 &lt;= 2 . print –&gt; * . 2 &lt;=2 . print –&gt; * . Answers 2 . All the steps are a sequence . “While i &lt;= 5:” is iteration because they repeat until i reaches 5 . “While j &lt;= i:” is selection because this is where they decide what j is . 3.3 Video 2 Hacks . Practice Problems . given the following code segment below: | a ⟵ 7 . b ⟵ 1 . c ⟵ 3 . d ⟵ 4 . a ⟵ b . b ⟵ c + d . d ⟵ b . find the value for a, b, c, d . Click for the answer! a = 1, b = 7, c = 3, d = 7 consider the following code segment: | hot ⟵ true . cold ⟵ false . cold ⟵ hot . hot ⟵ cold . what are the values of hot and cold after executing the code segment? . the value of hot is true, the value of cold is true | the value of hot is false, the value of cold is true | the value of hot is true, the value of cold is false | the value of hot is false, the value of cold is false | Click for the answer! 1. the value of hot is true, the value of cold is true Make TWO of your own code segments that contain at least 5 defined variables, then provide the answer and EXPLAIN why your answer is correct. | Sequencing num1 = 3 num2 = 1 num3 = 5 num1 = num2 + num3 num2 = num1 + num3 # num2 is now the new num1 + num3 Hack: Problem 1-4 explanation | #1 . a = 7 . b = 1 . c = 3 . d = 4 . a = 1 . b = 3 + 4 = 7 . d = 7 . Answer: a = 1, b = 7, c = 3, d = 7 . #2 . hot = true . cold = false . cold = hot = true . hot = cold= true . Answer: cold = true, hot = true . #3 Own code segment with 5 variables a = 3 . b = 7 . c = 10 . d = b + a . e = c / d . what is d * e ? . Explanation: . d = 7 + 3 = 10 . e = 10 / 10 = 1 . d * e = 10 * 1 = 10 . #4 . num1 = 3 . num2 = 1 . num3 = 5 . num1 = num2 + num3 = 1 + 5 = 6 . num2 = num1 + num3 = 3 + 6 = 9 . What is the value of num1 and num2? . Click for the answer! num1 = 6, num2 = 11 3.3 Video 3 Hacks . 3.4 Video 1 Hacks . String Homework . . Test 1 . firstName &lt;- “Bob” lastName &lt;- “Smith” var &lt;- substring(firstName, 1, 1) name &lt;- concat(lastName, var) email &lt;- concat(name, “@gmail.com”) DISPLAY(email) . | What would the result be? . | . Hint: var = “B” name = “SmithB” . . Test 2 . word1 &lt;- “computer” word2 &lt;- “textbooks” length1 &lt;- len(word1)/2 length2 &lt;- len(word2)/3 first &lt;- substring(word1, 2, len1) second &lt;- substring(word2, len2+3, len2) newWord &lt;- concat(first, second) DISPLAY(newWord) ————————————————————— . | . Answers . Test 1 . Result: “SmithB@gmail.com” | . Test 2 . Result: “ompuook” | . STRING HACKS . #1 . firstName = “Vardaan” . lastName = “Yatavelli” . var = substring(firstName, 1, 1) = “V” . name = concat(lastName, var) = “YatavelliV” . email = concat(name, “gmail.com”) = vardsin28@gmail.com . #2 . word1 = “computer” . word2 = “textbooks” . length1 = len(word1)/2 = 8 / 2 = 4 . length2 = len(word2)/3 = 9 / 3 = 3 . first = substring(word1, 2, len1) = ompu (starting at 2nd letter, 4 letters) . second = substring(word2, len2 + 3, len2) = ook (starting 6th letter, 3 letters) . newWord = concat(first, second) .",
            "url": "https://beebadger.github.io/fastpages/markdown/2022/11/30/hacks34.html",
            "relUrl": "/markdown/2022/11/30/hacks34.html",
            "date": " • Nov 30, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "3.1 & 3.2 Hacks (Vardaan and Navan)",
            "content": "3.1 Variables Assignment 1 Hacks . You want to store the number of apples in a shop. What is the best variable name and data type? | Answer: numApples and integer . EXPLANATION: the number of apples is a whole number, so it is best expressed as an integer. . You are storing true or false in a variable that asks if the classroom is cold. What is the best variable name and data type? | Answer: isCold and boolean . EXPLANATION: the state of being cold is a binary setting (either true or false), which is why it should be boolean. . How do you store the ID numbers for the students in the classroom? Choose the best variable name and data type | Answer: IDnumber and string . EXPLANATION: the ID number is constantly changing and is a list of numbers next to each other, so instead of an integer, it is best expressed as a string. . Is itisRainingtodayinsandiego a better option than isRaining? | Answer: no . EXPLANATION: this is way too complicated, isRaining is much simpler and broader . Which of the following types of data is best for a true or false question? | Answer: Boolean . EXPLANATION: Boolean is true/false . What is the difference between an integer and string of numbers? | Answer: An integer can be changed with addition and subtraction and a string is a set number or string of letters. . 3 Practice Questions . What is the best way to determine if John was money? | isMoney, boolean . What is the best way to determine Manny’s phone number? | phoneNumber, string . What is the best way to store all of Felipe’s pets? | petsOwned, string . 3.1 Variables and Assignment Video 2 Hacks . Consider the following code segment: currentScore ⟵ 10 . highScore ⟵ currentscore . currentScore ⟵ 7 . Answer: . currentScore = 7 . highScore = 10 . | Consider the following code segment: num1 ⟵ 4 . num2 ⟵ 6 . num1 ⟵ num 2 . Answer: . num1: 6 . num2: 6 . | Consider the following code segment: num1 ⟵ 25 . num2 ⟵ 15 . num3 ⟵ 30 . num2 ⟵ num3 . num3 ⟵ num1 . num1 ⟵ num2 . Answer: . num1: 30 . num2: 30 . num3: 25 . | Consider the following code segment: p ⟵ 10 . q ⟵ 20 . r ⟵ 30 . s ⟵ 40 . p ⟵ q . q ⟵ r . s ⟵ q . r ⟵ p . Answer: . r = 20 . | Consider the following code segment first ⟵ true . second ⟵ false . second ⟵ first . first ⟵ second . Answer: . first: true . second: true . | Consider the following code segment a ⟵ 10 . b ⟵ 20 . c ⟵ 30 . d ⟵ 40 . x ⟵ 20 . b ⟵ x + b . a ⟵ x + 1 . d ⟵ c / d + 2 . Answer: . a = 21 . b = 40 . c = 30 . d = 50 . | 3.2 Data Abstraction Video 2 Hacks . Consider the following code segment scores1 &lt;- [89, 78, 92, 63, 95, 88] . scores2 &lt;- [92, 79, 97, 63] . scores1 &lt;- scores2 . Answer: . score2 = [92, 79, 97, 63] . | Consider the following code segment listA &lt;- [“Sam”, “Ann”] . listB &lt;- [“Jamal”, “Tamara”] . listB &lt;- listA . listA &lt;- listB . Answer: . listA = [“Sam”, “Ann”] . | Consider the following code segment [“Red”, “Orange”, “Yellow”, “Green”, “Blue”, “Purple”] . Answer: . The length of the list is 6 . | What is the index number of “Purple” in this list? [“Red”, “Orange”, “Yellow”, “Green”, “Blue”, “Purple”] . Answer: . 6 . Correct Answer: . 5 because it starts with 0 . | Which of the following types of data can be stored in a list? . Answer: . Booleans, Strings, and Floats . | Which of the following variables is a float? Apples | -106.2 | 34 | True | . Answer: . -106.2 because thats the only decimal . | If a list has a length of 24 items, what is the index number of the 17th item? 21 | 17 | 16 | 69 | . Answer: . 16 because first one is 0 . | A variable is permanent and cannot be changed later on. True | False | . Answer: . False . | Which of the following is true about the list? [“Apples”, 42.0, “Bananas”, 0.5, “Avocado”, -902.2, “Lychee”, 6.9, “Orange”, 7.2] . Answer: . The list has floats, strings, and the index of “Avocado” is also 4 . |",
            "url": "https://beebadger.github.io/fastpages/markdown/2022/11/30/hacks12.html",
            "relUrl": "/markdown/2022/11/30/hacks12.html",
            "date": " • Nov 30, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Chapter 3.3 and 3.4!!",
            "content": "Chapter 3.3 and 3.4 . Video 2 Hacks a ⟵ 7 . b ⟵ 1 . c ⟵ 3 . d ⟵ 4 . a ⟵ b . b ⟵ c + d . d ⟵ b . Answer:a = 1, b = 7, c = 3, d = 7 . hot ⟵ true . cold ⟵ false . cold ⟵ hot . hot ⟵ cold . Asnwer: Hot = true and Cold = true . dog ⟵ yes . cat ⟵ no . cat ⟵ dog . cow ⟵ pig . pig ⟵ owl . display(cat) . Asnwer: Displays yes since dog = yes, then cat = dog which = yes, everything after that does not matter because we are displaying cat cookie ⟵ 3 . cake ⟵ 2 . cookie ⟵ cake . donut ⟵ 5 . chocolate ⟵ donut . caramel ⟵ 3 . display(donut + cake + cookie + chocolate + caramel) . Answer: 17 because 5 + 2 + 2 + 5 + 3 . Test 1 . firstName &lt;- “Bob” lastName &lt;- “Smith” var &lt;- substring(firstName, 1, 1) name &lt;- concat(lastName, var) email &lt;- concat(name, “@gmail.com”) DISPLAY(email) . What would the result be? . Hint: var = “B” name = “SmithB” . Asnwer: “SmithB@gmail.com” . Test 2 word1 &lt;- “computer” word2 &lt;- “textbooks” length1 &lt;- len(word1)/2 length2 &lt;- len(word2)/3 first &lt;- substring(word1, 2, len1) second &lt;- substring(word2, len2+3, len2) newWord &lt;- concat(first, second) DISPLAY(newWord) . Answer: 8/2 = 4 – ompu, 9/3 = 3 – ook, ompu + ook = ompuook .",
            "url": "https://beebadger.github.io/fastpages/chapter%203.3%203.4/2022/11/29/Chapter3_3And3_4.html",
            "relUrl": "/chapter%203.3%203.4/2022/11/29/Chapter3_3And3_4.html",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Tools Verification",
            "content": "Tools Verification . My Python interpreter in VS Code is working . . Build server locally is working using VS Code . . Browsing my application locally . .",
            "url": "https://beebadger.github.io/fastpages/tools%20verification/2022/11/17/Tools-Verification.html",
            "relUrl": "/tools%20verification/2022/11/17/Tools-Verification.html",
            "date": " • Nov 17, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Binary Hacks!!!",
            "content": "Hack #1 - Click the below button to randomly generate a number and convert to Binary, Hex, Decimal and Octal. . Generate the next random number to convert!!! . Binary. . Decimal. . Octal. . Hex. . . Hack #2 - Click the below button to randomly generate a number and convert to hex, decimal to set color. . Generate the next random number to change color!!! . The Color changes . . . Hack #3 - Click the below buttons to flip the bits and convert to diffetent formats. . Display Bits to flip!!! . Binary. . Hex. . Decimal. . Octal. . Toggle | Toggle | Toggle | Toggle | Toggle | Toggle | Toggle | Toggle | . 1 | 0 | 1 | 1 | 0 | 1 | 1 | 0 | . Here is my logic to convert decimal to binary − Create an empty string and a decimal number. − Iterate through the decimal number while it is greater than 0. − To get the last bit of the decimal number, perform bitwise &amp; operation of 1 with decimal number. If the last bit is 1, append “1” in the front of the binary string. Otherwise, append ‘0’ in the front of the binary string. − Remove the last bit from the decimal number using the right shift operator. Example decimal = 5; //101 while (decimal &gt; 0) { if (decimal &amp; 1) { binary = &quot;1&quot; + binary; } else { binary = &quot;0&quot; + binary; } decimal = decimal &gt;&gt; 1; } .",
            "url": "https://beebadger.github.io/fastpages/binary%20hacks/week1/2022/11/17/Binary-Hacks.html",
            "relUrl": "/binary%20hacks/week1/2022/11/17/Binary-Hacks.html",
            "date": " • Nov 17, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Night At The Museum",
            "content": "Our Project Striver . We created Striver, a program that acts as a social media website for thoughts and quotes. The api we created randomly generated an inspirational quote that once could like and comment on. As you can see from the image, any user can add own post to their “forum”. . This is a picture of my teammates, setting up the presentation of our program. I especially enjoyed my presentation to Mr. Mort with random quotes references. . . This above is a picture of a user, creating his own forum using our application. This website allows user to post inspirational quotes and like their friends’ posts. . This is the group that was presenting next to us - they made an Application called Mind Swepper. This had all the features of actual Mind Sweeper game. I had fun playing it!!! . . Stock Application . This si the CSP project I visited was made by another group from MORT P4. Their program tracks the stocks of a few major companies such as META, QCOM, APPLE, and INTC, which is also the data from their API. . . Here is another picture of the stocks application. I really like its instant stock display . . Here is another picture of the Application . . Arts Projects - Ceramics Section, Art, Graphic Design . I visited the ceramics section, Art, Graphic Design. . There were plenty of well made pieces in teh ceramics section . This plate is the piece I liked the most because they got the San Diego Padres Logo and colors perfectly. Also the pumpkin was made perfectly and was extremely detailed. . . I concluded night at the museum by watching a talk, where he talked about Food Waste. He had many very interesting facts about the harm that Food Waste is bringing on our world, and made a very lasting impact on his listener to prevent themselves from wasting food and water. . Summary - Night At The Museum . I had a very good time at Night At The Museum as I got to see all my friends and compare the projects that we have been working on all trimester. Seeing all the different classes and perspectives of art was very fun, and I overall had a very good time at my first night at the museum!!! .",
            "url": "https://beebadger.github.io/fastpages/night%20at%20the%20museum/2022/11/09/Night-Of-Museum.html",
            "relUrl": "/night%20at%20the%20museum/2022/11/09/Night-Of-Museum.html",
            "date": " • Nov 9, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Tri 1 Final Notes!!",
            "content": "Tri 1 Final Notes Explaniation . Notes of all the misses questions corected below . Missed Questions: 8 28 30 45 . 8: The procedure does not interchange the values of j and k. Rather, it returns a new list with the values at indices j and k interchanged. Video Notes: Topic is Program Design and Development How is a program developed? Programs are developed with a specific purpose in mind Developers follow specific steps and stick to their plan Sometimes the development is more exploratory than anything, and the steps are dictated by what happens Investigation is an important step in the process Developers must: Determine the requirements of the program Understand the constraints Understand the user concerns and interests How do developers investigate Surveys User testing Interviews Direct observation Developers design program by Brainstorming Storyboarding the program Planning the user experience Laying out the user interface Organizing into modules . 28: This code segment incorrectly charges customers who use more than 25 units of electricity. These customers are charged $7 per unit for all units, when they should be charged this rate only for the number of units above 25. For examples, if a customer used 32 units of electricity, they should be charged $5 for the first 25 and $7 for the additional 7 units (32 – 25 = 7 units), for a total charge of $174. This code segment would incorrectly charge the customer $224 for the 32 units. Video Notes Topic: Conditionals Algorithm: a finite set of instructions that accomplish a specific task Selection: Given a parameter the algorithm uses its instructions to determine if it needs to return true or false. EX: If statements Evaluates a conditional and return true or false statement . 30: Introducing a list to a program makes it more likely that the program will attempt to access an index beyond the length of the list, not less likely. Video Notes: Topic is Data Abstraction Strings An ordered sequence of characters May contain letters, numbers and all other special characters Ex: Words, phrases, sentences, ID numbers, etc. Lists An ordered sequence of elements Each element is a variable Ex: Playlists of songs, Names of students in a school, contacts in your phone, etc List Index Each element of a string is referenced by an index The index starts at 1 . Essential Information A list is an ordered sequence of elements An element is an individual value in a list that is assigned a unique index An index is a common method for referencing the elements in a list or string using natural numbers A string is an ordered sequence of characters . 45: The if condition (value &gt; 0) in the for loop where count1 is updated for theList values 1,2. So the count-1 =2. The else condition of (value &gt; 0) in the for loop where count2 is updated for theList values -2,-1,0. So the count-2 =3. . Notes of all the questions answered below . Result is equal to 2 which is multiplied by 5,when the procedure is ran 3 times which displays the resulting value | When the variable x is positive or 0, then Y will become False, so when it is put into the IF statement, the process will not go through because it is relayed as false instead of true | All of the other answers are all benefits that would not harm the team | The first two reasons, location as well as the dietary restrictions are both needed. However, the third and last reasons, the need for finding the username are not needed because in order to find other users the app finds it using the contacts of the original user | Three is the only right answer because Brandon’s phone contacts is not needed in order find other restaurants that don’t have the restrictions. Past restaurants are also not needed to be known in order to find new restaurants in the area. | The variable will keep getting 2 added to it until the variable is greater than the MAX variable. The first variable keeps on going even when it is equal to or less than the MAX variable. | The denominator must not be 0 ever, if the denominator is zero then the equation becomes impossible to calculate. The equation becomes undefined. | Newlist is making a copy of the numlist and interchanging the elements at J and K. Counting is also started at 1 instead of zero and the command LENGTH(numlist) counts all of the numbers that are available inside of the list, when counting these numbers it creates an end value which when placed back in the code cannot be passed. | Score- penalty must be 0 or positive and the current commands and code do not satisfy the command and will cause it to fail. So line 7 must be changed with line 3. | doing the work independently is not good for collaboration and can cause bigger failures and blocks in code writing | The outer loop iterates from j = 1 to myList length-1. Assigns k = j+1. The inner loop iterates from k=j+1 to myList length. If condition compares j’th and k’th values of myList. The code segment iterates through myList, comparing each element to all subsequent elements in the list and makes containsDuplicates = true if equal. | The user should not be made to put in the cost of the product, if that were true then they can pay whatever price they had wanted for the food. | If the contents of myList contained [-1, 0, 1] then the procedure will not return the intended result. This is because when the code is running, it will look at the first value and return false. However, it will keep on returning the next two values as true and in the end will ultimately return true even though a negative value is present. | 8 is greater than 7 so it will get passed in the first if statement, to correct this part of the code the first if statement should be replaced with &gt;8. The second problem is that 6 is less than 7 so it goes to the else statement which makes it display a check which is wrong. | The users should not be able to do much relating with the code, they can however provide different perspectives to the developers that provide new problems/ challenges which need to be overcome. | When answering this question I was stuck on answer one and answer two, I had known that the messages were needed to be sent in packets so the other two answers could not be correct, however I was not sure whether or not | Open protocols on the Internet helps – a way to standardize data transmission between different devices | Relationship between the World Wide Web and the Internet – WWW can be considered as linked pages, programs, and files. And Internet is the Network to access WWW | With 4 bits binary we can store decimal numbers from 0 to 15. Anything above decimal 15 cannot be accommodated in 4 bits – so 29 is an overflow. | With 4 bits binary we can store 16 values from 0 to 15. So Four bits are enough to store the eight directions. | Binary sequences are represented as 0,1s. Any information can be encoded using binary sequences. | The binary sequence 0011, 0110, and 1111 represent 33, 6 and 15. 9 is missing. | Analog data can be best represented in digital if we sample at regular intervals and convert into digital. | Binary 1011, 1101 are 11 and 13. So increasing order is 5, 11, 12, 13 | Age is an integer number and not boolean, string or collection | The variable isOpen has to represent true or false – hence Boolean is correct | Code should be Readable and hence – variables should have meaningful names such as studentName which is String and isAbsent that is Boolean. | The logic cost = numUnits(5) for less than or equals to 25 seems correct. Also for &gt;25 is correct in C. | List can grow at runtime. We can add, modify or delete elements as needed | The benefit of using a list as a data abstraction in this logic is – keeping the numeric values in a list makes it easier to apply the same computation to every data element. | In this myWord the element at index 3 of wordList is “ghi”. myChar the character at index 2 of myWord is “h” | myList is copied to yourList | Values greater than equal to 90 are printed | Copied in this sequence [“guitar”, “drums”, “bass”] → firstList → thirdList → secondList | The logic time &gt; 120 makes maxPS = 30 otherwise maxPS =50 is selected | Appending 2*i where i ranges from 1 to 10 – would store ten consecutive even integers, beginning with 2, in the list evenList. | To swap the values in two variables num1 → temp and num2 → num1 and finally temp → num2 | Word2 is not changed. Word1 and word3 are swapped using a temp variable. | The integer value 4 is the actual index value of a List. Other choices are not valid. | The X-Y value is 3-5 =-2 is displayed as part of else condition | The value 20 → q and q → p and finally p → r = 20 | Since num1 (6) &gt; num2 (4) then goes to else num3 = num2 = 4. Since num2 (4) &gt;= num3 (4) then num1 = num2 (4) + num3 (4) = 8. Finally sum = num1 (8) + num2 (4) + num3 (4) = 16 | This code executes for 5 times result = result + x. Where x ranges from 0 to 5. Finally result will be 15 | 23 mod y should be 2. The value of has to be 3. | The if condition (value &gt; 0) in the for loop where count1 is updated for theList values 1,2. So the count-1 =2. The else condition of (value &gt; 0) in the for loop where count2 is updated for theList values -2,-1,0. So the count-2 =3. | The true → first → second → first. So finally both values are true. | The value 20 → x. And a = x+1 which is 21. The variable b → 20. And updated as b = x + b that makes b value to 40. The c value remains at 30. The variable c=30 and d = 40 initialized and d is updated as c+d/2 which is 50. | The variable value y = 50. X is updated by y value 50. The variable z is updated by x value of 50. | Initially the word = “on”. The function reverse(word) gives “no” and concat to word “on” gives “noon” | The prefix(firstName, 1) gives firstName first letter and prefix(lastName, 1) gives lastName first letter value. We concat these letters to get the initials. |",
            "url": "https://beebadger.github.io/fastpages/tri1final/2022/11/06/Tri1Final.html",
            "relUrl": "/tri1final/2022/11/06/Tri1Final.html",
            "date": " • Nov 6, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "HTML Table, APIs, and Coding",
            "content": "Time All-time Cases Recorded Deaths Active Cases . | | | | Country All-time Cases Recorded Deaths Active Cases . Hacks: Breaking Down the Code . Time All-time Cases Recorded Deaths Active Cases . | | | | Country All-time Cases Recorded Deaths Active Cases . This first part is a Table, Th is table header, and we can see that the table has 4 columns: “time” “all time cases “ “Recorded Deaths” and “Active cases”. td is the table data and it gives 4 IDs: time, total cases, total deaths, and active cases. Each ID stores the data that is fetched by dcoument.getElementByID (later in the code) for time, total cases, total deaths, and active cases. To make the world data table. | The country data table does the same process for the headers, however it has an ID “result” which is returned by the upcoming data. | . Finally .catch(err =&gt;{ catches every error in the code, and instead of breaking the whole code, it just tells you what the specific error is | If this was not here, then (if there was an error) the whole output would be blank. | .",
            "url": "https://beebadger.github.io/fastpages/markdown/2022/10/18/HTMLinfo.html",
            "relUrl": "/markdown/2022/10/18/HTMLinfo.html",
            "date": " • Oct 18, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "CTE",
            "content": "Notes . Software and System Developement Pathway . This CTE pathway prepares students for computer science related futures such as design, development, implementation, maintenance, and management of systems. Generally used to meet the needs of modern businesses. | Critical for medical records, ecommerce, inventory, and digital entertainment | . | . Possible Occupations . Computer Programmer | Software Developer/Applications | Information Security Analyst | Web Developer | E-Business/E-Commerce Specialist | . Key Ideas/Standards . Identify and apply the systems development process. | Define and analyze systems and software requirements. | Create effective interfaces between humans and technology. | Develop software using programming languages. | Test, debug, and improve software development work. | Integrate a variety of media into development projects. | Develop Web and online projects. | Develop databases. | Develop software for a variety of devices, including robotics. | Develop intelligent computing. | . Hacks . We have done most of the standards so far this year, I think the only ones we havent done yet are developing databases, device software, or intelligent computing. | I am looking forward to learning how to develop intelligent computing, because I have always been curious of how programs such as artificial intelligence are coded. | This computer science CTE pathway will give us backround knowlesge in computers that would benefit us in many fields such as engineering. | .",
            "url": "https://beebadger.github.io/fastpages/markdown/2022/10/18/CTE.html",
            "relUrl": "/markdown/2022/10/18/CTE.html",
            "date": " • Oct 18, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Identifying and Correcting Errors",
            "content": "College Board Big Idea 1 . Identifying and Correcting Errors (Unit 1.4) . Become familiar with types of errors and strategies to fixing them . Lightly Review Videos and take notes on topics with Blog | Complete assigned MCQ questions | . Practice Code: . alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot; alphabetList = [] for i in alphabet: alphabetList.append(i) print(alphabetList) . [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;] . The intended outcome is to determine where the letter is in the alphabet using a while loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) i = 0 while i &lt; 26: if alphabetList[i] == letter: # CHANGED: i + 1 print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(i + 1) + &quot; letter in the alphabet&quot;) # ADDED: break break i += 1 . The letter d is the 3 letter in the alphabet . The intended outcome is to determine where the letter is in the alphabet using a for loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) # MOVED: count initializer outside loop count = 0 for i in alphabetList: if i == letter: # CHANGED: i + 1 print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(count + 1) + &quot; letter in the alphabet&quot;) # ADDED: break break count += 1 . This code outputs the even numbers from 0 - 10 using a while loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . evens = [] i = 0 while i &lt;= 10: evens.append(i) i += 2 print(evens) . [0, 2, 4, 6, 8, 10] . This code should output the odd numbers from 0 - 10 using a while loop. . odds = [] # CHANGED: i = 0 to i = 1 i = 1 while i &lt;= 10: odds.append(i) i += 2 print(odds) . [1, 3, 5, 7, 9] . This code outputs the even numbers from 0 - 10 using a for loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 0): evens.append(numbers[i]) print(evens) . [0, 2, 4, 6, 8, 10] . This code should output the odd numbers from 0 - 10 using a for loop. . numbers = [0,1,2,3,4,5,6,7,8,9,10] odds = [] for i in numbers: # CHANGED == 0 to == 1 if (numbers[i] % 2 == 1): odds.append(numbers[i]) print(odds) . [1, 3, 5, 7, 9] . The intended outcome is printing a number between 1 and 100 once, if it is a multiple of 2 or 5 . What values are outputted incorrectly. Why? | Make changes to get the intended outcome. | . numbers = [] newNumbers = [] i = 0 # CHANGED: &lt; to &lt;= while i &lt;= 100: numbers.append(i) i += 1 for i in numbers: # MOVED % 2 == 0 to same if statement if numbers[i] % 5 == 0 or numbers[i] % 2 == 0: newNumbers.append(numbers[i]) print(newNumbers) . [0, 2, 4, 5, 6, 8, 10, 12, 14, 15, 16, 18, 20, 22, 24, 25, 26, 28, 30, 32, 34, 35, 36, 38, 40, 42, 44, 45, 46, 48, 50, 52, 54, 55, 56, 58, 60, 62, 64, 65, 66, 68, 70, 72, 74, 75, 76, 78, 80, 82, 84, 85, 86, 88, 90, 92, 94, 95, 96, 98] . Challenge . This code segment is at a very early stage of implementation. . What are some ways to (user) error proof this code? | The code should be able to calculate the cost of the meal of the user | . Hint: . write a “single” test describing an expectation of the program of the program | test - input burger, expect output of burger price | run the test, which should fail because the program lacks that feature | write “just enough” code, the simplest possible, to make the test pass | . Then repeat this process until you get program working like you want it to work. . menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} total = 0 #shows the user the menu and prompts them to select an item print(&quot;Menu&quot;) for k,v in menu.items(): # CHANGED: &#39; &#39; to &#39; t&#39; print(k + &quot; t$&quot; + str(v)) #ideally the code should prompt the user multiple times items = input(&quot;Please select item(s) from the menu (comma-separated): &quot;) items_standarized = [item.strip() for item in items.split(&quot;,&quot;)] for item in items_standarized: if item not in menu.keys(): print(f&quot;Error: unrecognized menu item: {item}&quot;) exit() total += menu[item] print(&quot;Your total is: $&quot; + str(round(total, 2))) . Menu burger $3.99 fries $1.99 drink $0.99 Your total is: $4.98 . Hacks . Now is a good time to think about Testing of your teams final project... . What errors may arise in your project? | What are some test cases that can be used? | Make sure to document any bugs you encounter and how you solved the problem. | What are “single” tests that you will perform on your project? Or, your part of the project? As Hack Design and Test plan action … Divide these “single” tests into Issues for Scrum Board prior to coding. FYI, related tests could be in same Issue by using markdown checkboxes to separate tests. | . | .",
            "url": "https://beebadger.github.io/fastpages/week7/python/2022/10/12/ap-error-fixes.html",
            "relUrl": "/week7/python/2022/10/12/ap-error-fixes.html",
            "date": " • Oct 12, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Python Rapid API - Elementary School Friendly",
            "content": "Python Rapid API that filters out words that are not safe for elementary school kids . This is the Python Rapid API example using the PURGOMALUM API to filter some words with * that are not safe for elementary school kids . &quot;&quot;&quot; Requests is a HTTP library for the Python programming language. &quot;&quot;&quot; import requests # url for JSON Rapid API service url = &quot;https://www.purgomalum.com/service/json&quot; # add some banned words to filter from sentences banned_words = &quot;bloody,bugger,cow,crap,damn,god,goddam,jesus,hell,dead&quot; response = None # builds the HTTP GET request with parameters and prints response def get_response(sentence): # sentence to be filtered parameters = { #http GET parameters &#39;add&#39;: banned_words, &#39;text&#39;: sentence } # Request filtered sentence response = requests.request(&quot;GET&quot;, url, params=parameters) print(&quot;Original sentence: &quot; + sentence) print(&quot;Elementary school friendly sentence: &quot;) print(response.json().get(&#39;result&#39;)) print(&quot; n&quot;) # array of orginal sentences sentence_array = [ &quot;This is bloody hell !!!&quot;, &quot;Holy cow is not a right phrase for elementary schools kids&quot;, &quot;Crap - is not a right word that elementary school kids should use&quot;, &quot;God damn it -- where is hte ice-cream?&quot;, &quot;Phrase Jesus christ should not used in vain&quot;, &quot;Highway to Hell was the song from AC/DC&quot;, &quot;Dawn of the dead is an scary movie&quot; ] # Filter each sentence in the array for row in sentence_array: get_response(row) . Original sentence: This is bloody hell !!! Elementary school friendly sentence: This is ****** **** !!! Original sentence: Holy cow is not a right phrase for elementary schools kids Elementary school friendly sentence: Holy *** is not a right phrase for elementary schools kids Original sentence: Crap - is not a right word that elementary school kids should use Elementary school friendly sentence: **** - is not a right word that elementary school kids should use Original sentence: God damn it -- where is hte ice-cream? Elementary school friendly sentence: *********** -- where is hte ice-cream? Original sentence: Phrase Jesus christ should not used in vain Elementary school friendly sentence: Phrase ***** christ should not used in vain Original sentence: Highway to Hell was the song from AC/DC Elementary school friendly sentence: Highway to **** was the song from AC/DC Original sentence: Dawn of the dead is an scary movie Elementary school friendly sentence: Dawn of the **** is an scary movie .",
            "url": "https://beebadger.github.io/fastpages/2022/10/09/python-rapidapi.html",
            "relUrl": "/2022/10/09/python-rapidapi.html",
            "date": " • Oct 9, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Project Plan",
            "content": "Project Plan . The project that our team decided to create initially was a website that allowed users to post inspirational quotes and like their friends’ posts. However, we wanted to incorporate a random quotes API into our project and decided to change it. The design we came up with after hours of tireless work is shown below. . Design . Our group decided to use Google Drawings to mock up what our website will look like. We have decided to use Bootstrap in order to design the components. The adjusted plan includes random quotes that people can like rather than posting their own. . UI Design . . In this picture as you, the design shows inspiration quotes from prevalent speakers such as DJ Khaled and Martin Luther King Jr. This satisfies the Collegeboard criteria as follows: . Program Purpose &amp; Function . A website to display random inspirational quotes | Users can create accounts and save quotes by liking them | Allow users to share there goals and find new quotes | . Data Abstraction . We will store user data . Number of likes | Number of comments | Comments messages | Quotes | Data will be stored in a SQLite relational database | Data will be accessed using the sqlite3 library, a Python interface for SQLite | . Procedural Abstraction . We will implement separate functions and HTML templates for different views | Quote API abstraction using a function to access the RapidAPI | . Algorithm Implementation . The software development will employ Linux Ubuntu OS, VS Code, HTML, JavaScript, Python and Github will be used to host the code. Following are some of the DB fields . User ID | Follower ID | Likes | Messages | Quotes | . Testing . The Striver website will emply manual testing. After code is developed unit testing will be done by the developeer and integration testing will be done in phases. We’ll use of print statements to debug API issues. . Release . There will be multiple releases os the product and one final releases. We make a build everyday for team members to test. . Roles . Here are the Roles for our Project . Safin: Scrum Leader | Alex: Back- end | Kalani: Front End | Navan: Dev ops | .",
            "url": "https://beebadger.github.io/fastpages/markdown/plan/week7/2022/10/09/project-plan.html",
            "relUrl": "/markdown/plan/week7/2022/10/09/project-plan.html",
            "date": " • Oct 9, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "AP Prep Multiple Choice",
            "content": "This is my blogpost with proof that shows completion of the Multiple Choice questions from College Board. . Completed Status with Results of all the assigned units . . Completed Status with Results of Ap Internet Quiz . . Completed Status with Results of AP Copy of the Indentifying .. . . Incorrect Answer#1 . . Incorrect Answer#2 . .",
            "url": "https://beebadger.github.io/fastpages/markdown/week7/2022/10/09/AP-Prep-Multiple.html",
            "relUrl": "/markdown/week7/2022/10/09/AP-Prep-Multiple.html",
            "date": " • Oct 9, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "Personal Flask Website",
            "content": "This is my blogpost that shows details of our Personal Flash Website and Deployment. . Here is the website snapshot . . Link to our Group Flask Website . Personal Flask Website . Here is our repo . Personal Flask Repo .",
            "url": "https://beebadger.github.io/fastpages/deployment/week6/2022/10/02/Personal-Flask-Website.html",
            "relUrl": "/deployment/week6/2022/10/02/Personal-Flask-Website.html",
            "date": " • Oct 2, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Group Flask Website",
            "content": "This is my blogpost that shows details of our Group Flash Website and Deployment. . Here is the website snapshot . . Link to our Group Flask Website . Group Flask Website . Here is our repo . Group Flask Repo - Striver .",
            "url": "https://beebadger.github.io/fastpages/deployment/week6/2022/10/02/Group-Flask-Website.html",
            "relUrl": "/deployment/week6/2022/10/02/Group-Flask-Website.html",
            "date": " • Oct 2, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "AWS Deployment",
            "content": "This is my blogpost that shows details of AWS Deployment of Personal Flash Website. . Here are the steps from git clone to build and run Flask locally on AWS after connecting to AWS EC2 . cd /home/ubuntu/navan-flask git clone https://github.com/NavanYatavelli/BeeFlask.git . Edit docker-compose.yml file . version: &#39;3&#39; services: web: image: flask_port_v1 build: . ports: - &quot;8087:8080&quot; . Run and check if docker-compose process is running . // Run docker-compose sudo docker-compose up -d //Check Docker process running (optional) sudo docker-compose ps . Acesss locally . curl localhost:8087 . . Configure nginx to redirect requests. Nginx listens for the Web Application request and directs it to the Web Application service. Internet requests for 8081 port maps to 8087 port on localhost . 18.216.138.52:8081 –&gt; localhose:8087 . // contents of file -- /etc/nginx/sites-available/navan-flask server { listen 8081; listen [::]:8081; server_name 18.216.138.52; location / { proxy_pass http://localhost:8087; add_header &quot;Access-Control-Allow-Origin&quot; *; } } . Accesss Flask Website - Browser . Personal Flask Website . Make change in github.com/../BeeFlask to this file /BeeFlask/templates/index.html . . Get latest from Github to AWS, rebuild and relaunch docker process . cd /home/ubuntu/navan-flask git pull //Check Docker process running (optional) sudo docker-compose ps // Kill the docker process sudo docker-compose kill //Rebuid Docker sudo docker-compose build --no-cache //Restart Docker process sudo docker-compose up -d . Acesss locally . curl localhost:8087 . . Accesss Flask Website - Browser, shows updated . .",
            "url": "https://beebadger.github.io/fastpages/deployment/week6/2022/10/02/AWS-Deployment.html",
            "relUrl": "/deployment/week6/2022/10/02/AWS-Deployment.html",
            "date": " • Oct 2, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "AP Prep MCQ",
            "content": "This is my blogpost with proof that shows completion of the MCQ questions from College Board. . Completed Status with Results of Unit 1.1, 1.2 and 1.3 . . Incorrect Answers . . Explanation - when x is not negative y is assigned the value false and hte display statement is never executed. .",
            "url": "https://beebadger.github.io/fastpages/markdown/week6/2022/10/02/AP-Prep-MCQ.html",
            "relUrl": "/markdown/week6/2022/10/02/AP-Prep-MCQ.html",
            "date": " • Oct 2, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "Jupyter Notebook with Javascript kernel",
            "content": "Jupyter Notebook that shows personal usage of Jupyter JavaScript kernel . Here is an example of console.log -- this is run behind the scenes and is not visible from the browser. . console.log(&quot;Hello&quot;); . Hello . Console Log with String variable . var text = &quot;Hello, APCSP&quot;; console.log(text); . Hello, APCSP . Building Table data using Java Script . This Java Script snippet defines HW Assignment function to hold assignment data . // define a function to hold data for a Assignment function Assignment(week, topic, description, link) { this.week = &quot;Week#&quot; + week; this.topic = topic; this.description = description; this.link = link; } . HW Assignment array initilization used to populate the table . // define a Assignment Array var assignments = [ new Assignment(0,&quot;Tools and Equipment&quot;, &quot;Tool Setup Sprint and Pair Programming&quot;, &quot;https://github.com/NavanYatavelli/fastpages/issues/2&quot;), new Assignment(1,&quot;Introduction to Python&quot;, &quot;Fastpages Frontend Development &amp; Bash Tutorial&quot;, &quot;https://github.com/NavanYatavelli/fastpages/issues/3&quot;), new Assignment(2,&quot;Data Abstraction in Python&quot;, &quot;HTML Fragments&quot;, &quot;https://github.com/NavanYatavelli/fastpages/issues/4&quot;), new Assignment(3,&quot;Creative Development Sprint&quot;, &quot;Program Design with App Lab by Code.org&quot;, &quot;https://github.com/NavanYatavelli/fastpages/issues/5&quot;), new Assignment(4,&quot;Python Web Server Project&quot;, &quot;Flask/Python Web Application &amp; Fastpages local server&quot;, &quot;https://github.com/NavanYatavelli/fastpages/issues/6&quot;), new Assignment(5,&quot;UI Starters&quot;, &quot;JavaScript Tutorial&quot;, &quot;https://github.com/NavanYatavelli/fastpages/issues/7&quot;), ]; . Below defines the Course function and also constructs its instance . // define a course and build Course objects function Course(name, assignments){ this.name = name; // name of the course this.assignments = assignments; //assignments for this course } // make a Computer Science Course - with name and assignements apcompsci = new Course(&quot;AP Computer Science Principles&quot;, assignments); . Course { name: &#39;AP Computer Science Principles&#39;, assignments: [ Assignment { week: &#39;Week#0&#39;, topic: &#39;Tools and Equipment&#39;, description: &#39;Tool Setup Sprint and Pair Programming&#39;, link: &#39;https://github.com/NavanYatavelli/fastpages/issues/2&#39; }, Assignment { week: &#39;Week#1&#39;, topic: &#39;Introduction to Python&#39;, description: &#39;Fastpages Frontend Development &amp; Bash Tutorial&#39;, link: &#39;https://github.com/NavanYatavelli/fastpages/issues/3&#39; }, Assignment { week: &#39;Week#2&#39;, topic: &#39;Data Abstraction in Python&#39;, description: &#39;HTML Fragments&#39;, link: &#39;https://github.com/NavanYatavelli/fastpages/issues/4&#39; }, Assignment { week: &#39;Week#3&#39;, topic: &#39;Creative Development Sprint&#39;, description: &#39;Program Design with App Lab by Code.org&#39;, link: &#39;https://github.com/NavanYatavelli/fastpages/issues/5&#39; }, Assignment { week: &#39;Week#4&#39;, topic: &#39;Python Web Server Project&#39;, description: &#39;Flask/Python Web Application &amp; Fastpages local server&#39;, link: &#39;https://github.com/NavanYatavelli/fastpages/issues/6&#39; }, Assignment { week: &#39;Week#5&#39;, topic: &#39;UI Starters&#39;, description: &#39;JavaScript Tutorial&#39;, link: &#39;https://github.com/NavanYatavelli/fastpages/issues/7&#39; } ] } . This snippet builds the HTML table body using fragments and Java Script . // define an HTML conversion &quot;method&quot; associated with Course Course.prototype._toHtml = function() { // HTML Style is build using inline structure var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px solid grey;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em grey;&quot; ); // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Week&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Topic&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Description&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;HW Link&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array, iterate through each row of compsci.classroom for (var row of apcompsci.assignments) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + row.week + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.topic + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.description + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + &quot;&lt;a href= &quot;&quot; + row.link + &quot; &quot;&gt;&quot; + row.topic + &quot;&lt;/a&gt;&quot; + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;tr&gt;&quot;; } // Build and HTML fragment of body /* return ( body ); */ return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; . [Function] . Here is the output of Table data that was built by Java Script . // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(apcompsci._toHtml()); . WeekTopicDescriptionHW Link . Week#0 | Tools and Equipment | Tool Setup Sprint and Pair Programming | Tools and Equipment | Week#1 | Introduction to Python | Fastpages Frontend Development &amp; Bash Tutorial | Introduction to Python | Week#2 | Data Abstraction in Python | HTML Fragments | Data Abstraction in Python | Week#3 | Creative Development Sprint | Program Design with App Lab by Code.org | Creative Development Sprint | Week#4 | Python Web Server Project | Flask/Python Web Application &amp; Fastpages local server | Python Web Server Project | Week#5 | UI Starters | JavaScript Tutorial | UI Starters | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . .",
            "url": "https://beebadger.github.io/fastpages/2022/09/26/jupiter-javascript.html",
            "relUrl": "/2022/09/26/jupiter-javascript.html",
            "date": " • Sep 26, 2022"
        }
        
    
  
    
        ,"post21": {
            "title": "SCRUM Project Idea",
            "content": "Program purpose . The website that our team decided to create is called Striver. The website keeps track of your personal goals and shares them with others. Just like popular social media websites such as Instagram and Facebook, you will be able to like each other’s goals and see a the goals of people that you know. . Design . Our group decided to use Google Drawings to mock up what our website will look like. We have decided to use Bootstrap in order to design the components. We will use Flask to template different pages. The like button is going to be an image that, when clicked, will switch to an undecided color. . . SCRUM team role . My team and I decided on the following roles: . Navan: DevOps | Safin: SCRUM Master | Kalani: Frontend | Alex: Backend | . As DevOps Lead , I’m the liaison between the other team members that contribute to software maintenance and creation with the purpose of making faster updates and writing code that is easy to update and access.The DevOps pipeline will be powered by GitHub Actions + some hosting provider (presumably AWS) . We intend to use HTML/CSS/JS for our frontend and Python on the backend. . SCRUM poster . . This poster here is one that my team and I created together in order to describe each role of a SCRUM team and the process that goes into a sprint from the start to the end. .",
            "url": "https://beebadger.github.io/fastpages/markdown/scrum/week5/2022/09/25/scrum-project-idea.html",
            "relUrl": "/markdown/scrum/week5/2022/09/25/scrum-project-idea.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post22": {
            "title": "JavaScript Tips Generator!!!",
            "content": "Click the below button to generate JavaScript Tips. . Generate the next JavaScript Tip!!! . Click the above button to generate JavaScript Tips. . . Here is the Java Script code explanation . // Clicking this button will call function getJavascriptTips() &lt;button name=&quot;button&quot; onclick=&quot;getJavascriptTips()&quot; &gt;Generate the next JavaScript Tip!!!&lt;/button&gt; // The function getJavascriptTips() will display the JavaScript tip here in this para &lt;p id=&quot;tips&quot;&gt;Click the above button to generate JavaScript Tips.&lt;/p&gt; &lt;script&gt; // Array of 10 tips var tipsArray = [ &quot;JavaScript took just 10 days to develop.&quot;, &quot;JavaScript was probably named after Java.&quot;, &quot;GitHub says JavaScript is the Most Popular language in the world.&quot;, &quot;JavaScript is responsible for Web2.&quot;, &quot;JavaScript has many implementations.&quot;, &quot;JavaScript was initially created as a browser-only language.&quot;, &quot;JavaScript is the Programming Language Of The Web.&quot;, &quot;JavaScript is single threaded. &quot;, &quot;Along with HTML an CSS, JavaScript is one of the three main things of the www (World Wide Web).&quot;, &quot;In JavaScript semi colon can be used at the beginning of a statement.&quot;, ]; // this function is called upon button click function getJavascriptTips() { var time = new Date().getMilliseconds(); //get current time var arrayIndex = time % 10; // get the arrray index value &lt; 10 document.getElementById(&quot;tips&quot;).innerHTML = tipsArray[arrayIndex]; // replace the p element tips } &lt;/script&gt; .",
            "url": "https://beebadger.github.io/fastpages/java%20script/week5/2022/09/25/Javascript-tips.html",
            "relUrl": "/java%20script/week5/2022/09/25/Javascript-tips.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post23": {
            "title": "Post that uses HTML fragments and JavaScript data!!",
            "content": "This Post uses HTML fragments and JavaScript data to build a table. . Below table is built with Java Script data and HTML fragments . AP Computer Science Principles – Assignments Data . Here is the Java Script code explanation . This Java Script snippet defines HW Assignment function to hold assignment data . // define a function to hold data for a Assignment function Assignment(week, topic, description, link) { this.week = &quot;Week#&quot; + week; this.topic = topic; this.description = description; this.link = link; } . HW Assignment array initilization used to populate the table . // define a Assignment Array var assignments = [ new Assignment(0,&quot;Tools and Equipment&quot;, &quot;Tool Setup Sprint and Pair Programming&quot;, &quot;https://github.com/NavanYatavelli/fastpages/issues/2&quot;), new Assignment(1,&quot;Introduction to Python&quot;, &quot;Fastpages Frontend Development &amp; Bash Tutorial&quot;, &quot;https://github.com/NavanYatavelli/fastpages/issues/3&quot;), new Assignment(2,&quot;Data Abstraction in Python&quot;, &quot;HTML Fragments&quot;, &quot;https://github.com/NavanYatavelli/fastpages/issues/4&quot;), new Assignment(3,&quot;Creative Development Sprint&quot;, &quot;Program Design with App Lab by Code.org&quot;, &quot;https://github.com/NavanYatavelli/fastpages/issues/5&quot;), new Assignment(4,&quot;Python Web Server Project&quot;, &quot;Flask/Python Web Application &amp; Fastpages local server&quot;, &quot;https://github.com/NavanYatavelli/fastpages/issues/6&quot;), new Assignment(5,&quot;UI Starters&quot;, &quot;JavaScript Tutorial&quot;, &quot;https://github.com/NavanYatavelli/fastpages/issues/7&quot;), ]; . Below defines the Course function and also constructs its instance . // define a course and build Course objects function Course(name, assignments){ this.name = name; // name of the course this.assignments = assignments; //assignments for this course } // make a Computer Science Course - with name and assignements apcompsci = new Course(&quot;AP Computer Science Principles&quot;, assignments); . This snippet builds the HTML table body using fragments and Java Script . // define an HTML conversion &quot;method&quot; associated with Course Course.prototype._toHtml = function() { // HTML Style is build using inline structure var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px solid grey;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em grey;&quot; ); // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Week&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Topic&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Description&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;HW Link&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array, iterate through each row of compsci.classroom for (var row of apcompsci.assignments) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + row.week + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.topic + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.description + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + &quot;&lt;a href= &quot;&quot; + row.link + &quot; &quot;&gt;&quot; + row.topic + &quot;&lt;/a&gt;&quot; + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;tr&gt;&quot;; } // Build and HTML fragment of body return ( body ); .",
            "url": "https://beebadger.github.io/fastpages/java%20script/week5/2022/09/25/Html-JS-Post.html",
            "relUrl": "/java%20script/week5/2022/09/25/Html-JS-Post.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post24": {
            "title": "Psychology and the Good Life Lecture Notes!!",
            "content": "Psychology and the Good Life Notes . Introduction . Yale students and other ivy leaguers have a ton of stress | To make them less stressed, the experiment followed by including the students to engage in happier activities. | . Insights . Healthy practices matter a lot | Become wealthy, make a lot of money, it matters a lot | Make time for gratitude | Helping others, helps a lot | Make time to make more social connections | With effort, anything can change! | . Conclusion . Stress is a huge issue, to cope with it, we must work together and embrace the happy aspects of life. | . Gratitude List . Here are some things that I am grateful for: . Family | Money | Friends | . Gratitude List . Family | Education | Freedom | Access to technology to live an easy lifestyle | My Mental Health Goals . Grind harder, make more money | Sleep at least 8 hrs per night on average | Eat Good and Healthy | Workout and get BUFF. | Personal Goals I want to achive in my life . All A’s in highschool | Get 33-35 on SAT | MAKE $ | Get better at football, on Varsity. | Stress Form . Stress Form for high schoolers. Below are statistics for the results of each question. | .",
            "url": "https://beebadger.github.io/fastpages/psychology/week5/2022/09/19/PsychologyVideoNotes.html",
            "relUrl": "/psychology/week5/2022/09/19/PsychologyVideoNotes.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post25": {
            "title": "Collaboration Notes!!",
            "content": "Collaboration 1.1 Notes . Social Media is a great example for collaboration, this is because its digital functionality allows others to communicate. Facebook and Instagram are examples of collaboration. | . Pros of Collaborating . Collaboration leads to certain skills, it can help you with conflict resolution with toxic members. It can help you negotiate important deals. It can help you solve problems in a verbal fight. Collaborating also helps you in teamwork, where you are constantly communicating and dealing with problems. . | Working together allows things to go far and achieve more things. . | . Ways to Collaborate . In class, you can make changes for each other. | You can make changes in github, by viewing each others repo. | You can comment on each others issues, on the review ticket. | .",
            "url": "https://beebadger.github.io/fastpages/collaboration/week4/2022/09/19/Collaboration.html",
            "relUrl": "/collaboration/week4/2022/09/19/Collaboration.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post26": {
            "title": "Create Performance Task!!",
            "content": "Create Performance Task . Performance Task - Idea . I would like to create a AppLab game that gets the Football players data from NFL servers and displays as statistics. It would show the top players, Running Backs, Quarter Backs and Receivers stats. . Technical Details . Usage of AppLab Tool | AppLab functions | . Design . . Learning . Knowledge of AppLab Functions | Research - on how to get data from NFL servers | .",
            "url": "https://beebadger.github.io/fastpages/performancetask/week3/2022/09/11/Create-Perf-Task.html",
            "relUrl": "/performancetask/week3/2022/09/11/Create-Perf-Task.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post27": {
            "title": "AppLab Notes!!",
            "content": "AppLab Notes . App#1 - Quiz . Link to the Quiz Game App Quiz Game App QuizGame-App . Program Purpose: The purpose of the quiz game is knowledge and entertainment. The requirement for this task is to do atlease 3 question quiz. We narrowed down to ask Countries questions since this would bring more versatile audience interested in playing the game. As suggested this game is a quick and easy fun game for any new players to play. . Functionality: The functionality of the Quiz game is built on navagation of screens as user answers each question. As part of the Design – we started doing the outline of the quiz rather than going straight to the coding. Functionality of the Quiz Game is listed captured as a flowchart. It is a diagram of the sequence of movements and actions of interactions involved in our game. One screen to next screen functionality is captured below in each box. . How it works . 1) This quiz is about identifying different countries by the clues provided about the country . 2) Defined and set the variable “score” to 0 . 3) Started on homescreen with Instructions “How To” and “Start Quiz” buttons . 4) Selecting “How To” shows Instructions of playing the quiz. From here we can start the quiz or go back to homepage . 5) When “Start the Quiz” button is selected, “The Country”quiz starts with the first question. . 6) The first question is about Brazil. A picture of Brazil is shown with 4 options indicating different countries. Options are provided as Buttons . 7) If the correct country, for this first question Brazil, is selected, Correct Answer screen pops up. This screen provided more fun facts about the country in question 1 . 8) When user answers Brazil, score is incremented by 1 . 9) Selecting “Next Question” in the screen, takes user to the second question . 10) In this second question, a phrase is shown. User has to guess the country to which the phrase belongs and enter the correct answer in the text box provided . 11) If he correctly guesses it as “America”, score is incremented, Fun facts about America are provided, and Next question button is presented . 12) When user selects this Next question button, Question 3 showing a countries flag is presented with 4 coutnry options to guess . 13) If the correct country, for this third question India, is selected, Correct Answer screen pops up and score is again incremented by 1. This screen provided more fun facts about the country in question 3 . 14) End Quiz button is provided on the third questions fun facts screen, selecting it would take the user to “How did you do?” screen, with a button to get the score is provided . 15) Pressing this button shows the score that’s stored in the store variable . Design . . Successes . The App Screens are Designed fairly simple and very user-friendly. | Any novice user can immediately start play the Quiz game | The screen to screen colors, text, buttons and text entry are very attractive for users to keep playing | Score calculation logic was implemented using a variable and shows simple status at the end of the Game. Very easy to follow and understand the Game. | . Discoveries &amp; Challanges . Discovered how to use OnEvent() fairly quickly | I had challanges in getting the user text submission to work | Setting up right varibles took some exploration | . App#2 - Piano . The Piano App is here Piano App . Program Purpose: The purpose of the Piano App is entertainment and learning. The requirement for this task is to do atlease 3 music keys. I narrowed down to simple keys since this would bring more versatile audience interested in playing the music game. As suggested this game is a quick and easy fun game for any new players to play and learn music. . Design Functionality: . 1) This program mimicks a Piano Player with only 7 keys 2) Program starts with a homescreen with a Piano image and Start button 3) Upon selecting the Start button, user is presented with 7 keys, A, B, C, D, E, F 4) When each key is selected, a different sound associated with the key is play . Successes . The Music App Screens are Designed fairly simple and very user-friendly. | The whole program was written in less than an hour | . Challanges &amp; Discoveries . Discovered that the sound played has delay after the key is pressed | The delay in sound may be due to the file load takes time | Challanges was to extend the game to more functionality | .",
            "url": "https://beebadger.github.io/fastpages/applab/week3/2022/09/11/AppLab-Notes.html",
            "relUrl": "/applab/week3/2022/09/11/AppLab-Notes.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post28": {
            "title": "AppLab Ideas!!",
            "content": "AppLab Ideas . Planning: Design . The requirement for this task is to do a 3 question quiz. During the early stage of PLANing we spent considerable amount of time on coming up with ideas of Quiz. We discussed about quiz ideas of various topics ranging from Football, History, Countries and Cities. We finally narrowed down on the Countries since this would bring more versatile audience interested in playing the game. You will be creating your own quiz with a partner on a topic of your choice. The most important thing you do before coding is to PLAN. . As part of the Design – we started doing the outline of the quiz rather than going straight to the coding. As part of the outline we listed out the flowchart of our game. It is a diagram of the sequence of movements and actions of interactions involved in our game. After multiple revisions of thinking, discussing, drawing and envisioning of our game steps – we came up with the below flowchart as part of our design and planning. . . Daily Plans . To improve the quality of our implementation we planned on discussing about our plans daily atleast for 5 minutes on our current issues before embarking into work. This Daily Planning helped with our classroom focus and execution of building the Game, and its planning. . As part of our Daily plans while implementing our Design we wanted to implement the Instructions screen aswell. Here is the change to our Design after adding Instructions screen to our Game . . Planning Phases . As part of execution we discussed to layout various steps for the Country Game - . Coming up with the Idea of Game | Design of the Country game | Prototyping of the game | Coding of the game | Testing of the Country Game | .",
            "url": "https://beebadger.github.io/fastpages/applab/week3/2022/09/11/AppLab-Ideas.html",
            "relUrl": "/applab/week3/2022/09/11/AppLab-Ideas.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post29": {
            "title": "Python Quiz List of Dictionaries",
            "content": "import getpass, sys # imports library/ code from site import ENABLE_USER_SITE # imports from a site def question_and_answer(prompt): # defines question_and_answer # definition print(&quot;Question: &quot; + prompt) # asks question msg = input() # get input print(&quot;Answer: &quot; + msg) # prints answer questions = 8 # declaring variables correct = 0 wrong = 0 def question_with_response(dictionary): # definition of optimized function question = list(dictionary.keys())[0] # get the question from dict answer = dictionary[question] # get the answer from dict print(&quot;Question: &quot; + question) rsp = input() global correct, wrong # use global variables if rsp == answer: print(&quot;Correct respose&quot;) correct += 1 else: print(&quot;Incorrect response!&quot;) wrong += 1 print(&#39;Hey there!, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) # program logic beggins print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) question_and_answer(&quot;Are you ready to take a quiz?&quot;) # first question begins # This is a list of dictionaries list_quiz =[ {&quot;Who was the quarterback for the Patriots 7 years ago?&quot;:&quot;Tom Brady&quot;}, {&quot;Who is the current quarterback for the Patriots?&quot;:&quot;Mac Jones&quot;}, {&quot;What position does Aaron Rodgers play?&quot;:&quot;Quarterback&quot;}, {&quot;Who is the owner of the Patriots football team?&quot;:&quot;Robert Kraft&quot;}, {&quot;What is the name of the most popular football video game?&quot;:&quot;Madden&quot;}, {&quot;What command is used to include other functions that are developed?&quot;:&quot;import&quot;}, {&quot;What command in this example is used to evaluate a response?&quot;:&quot;if&quot;}, {&quot;Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition?&quot;:&quot;expression&quot;} ] # Ask each question for dictionary in list_quiz: question_with_response(dictionary) # percent calculation percent = (correct/questions) * 100 # finding a perctage print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions) + &quot;. You got &quot; + str(wrong) + &quot; questions wrong. Your percentage on this quiz is &quot; + str(percent) + &quot;%.&quot;) # printing out the score and percentage . Hey there!, root running /bin/python3 You will be asked 8 questions. Question: Are you ready to take a quiz? Answer: Yes Question: Who was the quarterback for the Patriots 7 years ago? Correct respose Question: Who is the current quarterback for the Patriots? Incorrect response! Question: What position does Aaron Rodgers play? Incorrect response! Question: Who is the owner of the Patriots football team? Correct respose Question: What is the name of the most popular football video game? Incorrect response! Question: What command is used to include other functions that are developed? Incorrect response! Question: What command in this example is used to evaluate a response? Incorrect response! Question: Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition? Incorrect response! root you scored 2/8. You got 6 questions wrong. Your percentage on this quiz is 25.0%. .",
            "url": "https://beebadger.github.io/fastpages/2022/09/06/quiz-lists-dicts.html",
            "relUrl": "/2022/09/06/quiz-lists-dicts.html",
            "date": " • Sep 6, 2022"
        }
        
    
  
    
        ,"post30": {
            "title": "Markdown Table",
            "content": "This is a Markdown Table to keep track of APCSP course material . Below is the weekly assignments for APCSP course . Tables . Week Tasks Description . 0 | Tools | Tools Setup | . 1 | Jupyter, Fastpages | Intro Python, Jupyter, Fastpages | . 2 | Data Abstraction | Data Abstraction | . 3 | AppLab | AppLab, Creative Development | . 4 | Python Web Server | Python Web Server Project | . 5 | UI Starters | UI Starters | . 6 | TBD | TBD | .",
            "url": "https://beebadger.github.io/fastpages/markdown/week2/2022/09/06/Markdown-Table.html",
            "relUrl": "/markdown/week2/2022/09/06/Markdown-Table.html",
            "date": " • Sep 6, 2022"
        }
        
    
  
    
        ,"post31": {
            "title": "Python List Dictionaries Iteration",
            "content": "Defining a list called InfoDb . InfoDb = [] # InfoDB is a data structure with expected Keys and Values # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: &quot;John&quot;, &quot;LastName&quot;: &quot;Mortensen&quot;, &quot;DOB&quot;: &quot;October 21&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;jmortensen@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;2015-Fusion&quot;, &quot;2011-Ranger&quot;, &quot;2003-Excursion&quot;, &quot;1997-F350&quot;, &quot;1969-Cadillac&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Sunny&quot;, &quot;LastName&quot;: &quot;Naidu&quot;, &quot;DOB&quot;: &quot;August 2&quot;, &quot;Residence&quot;: &quot;Temecula&quot;, &quot;Email&quot;: &quot;snaidu@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;4Runner&quot;] }) #print(InfoDb[0]) . Adding records to the InfoDb . third = { &quot;FirstName&quot;: &quot;Nanu&quot;, &quot;LastName&quot;: &quot;Shadow&quot;, &quot;DOB&quot;: &quot;August 5&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;san@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;Jeep&quot;,&quot;4Runner&quot;] } # add the dict to List InfoDb.append(third) # create dict fourth = { &quot;FirstName&quot;: &quot;Lional&quot;, &quot;LastName&quot;: &quot;Messi&quot;, &quot;DOB&quot;: &quot;January 30&quot;, &quot;Residence&quot;: &quot;Barcelona&quot;, &quot;Email&quot;: &quot;LMessi@gmail.com&quot;, &quot;Owns_Cars&quot;: [&quot;Lamborghini&quot;,&quot;Maserati&quot;,&quot;Corvette&quot;] } # add the dict to List InfoDb.append(fourth) InfoDb.append({ &quot;FirstName&quot;: &quot;Dan&quot;, &quot;LastName&quot;: &quot;Mark&quot;, &quot;DOB&quot;: &quot;October 10&quot;, &quot;Residence&quot;: &quot;San Francisco&quot;, &quot;Email&quot;: &quot;DMark@yahoo.com&quot;, &quot;Owns_Cars&quot;: [&quot;2006 toyota sienna&quot;, &quot;2011-Hellcat&quot;, &quot;2003-Toyota Carolla&quot;] }) . print function: of InfoDb content . def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) # join allows printing a string list with separator print() . For Loop Iteration . def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output John Mortensen Residence: San Diego Birth Day: October 21 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Sunny Naidu Residence: Temecula Birth Day: August 2 Cars: 4Runner Nanu Shadow Residence: San Diego Birth Day: August 5 Cars: Jeep, 4Runner Lional Messi Residence: Barcelona Birth Day: January 30 Cars: Lamborghini, Maserati, Corvette Dan Mark Residence: San Francisco Birth Day: October 10 Cars: 2006 toyota sienna, 2011-Hellcat, 2003-Toyota Carolla . While Loop Iteration . def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return while_loop() . While loop output John Mortensen Residence: San Diego Birth Day: October 21 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Sunny Naidu Residence: Temecula Birth Day: August 2 Cars: 4Runner Nanu Shadow Residence: San Diego Birth Day: August 5 Cars: Jeep, 4Runner Lional Messi Residence: Barcelona Birth Day: January 30 Cars: Lamborghini, Maserati, Corvette Dan Mark Residence: San Francisco Birth Day: October 10 Cars: 2006 toyota sienna, 2011-Hellcat, 2003-Toyota Carolla . Iteration using recursion . def recursive_loop(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursive_loop(i + 1) return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Recursive loop output John Mortensen Residence: San Diego Birth Day: October 21 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Sunny Naidu Residence: Temecula Birth Day: August 2 Cars: 4Runner Nanu Shadow Residence: San Diego Birth Day: August 5 Cars: Jeep, 4Runner Lional Messi Residence: Barcelona Birth Day: January 30 Cars: Lamborghini, Maserati, Corvette Dan Mark Residence: San Francisco Birth Day: October 10 Cars: 2006 toyota sienna, 2011-Hellcat, 2003-Toyota Carolla . For Loop Iteration With Index . print(&quot;for loop with index output n&quot;) # display indices in the list for i in range(len(InfoDb)): print_data(InfoDb[i]) . for loop with index output John Mortensen Residence: San Diego Birth Day: October 21 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Sunny Naidu Residence: Temecula Birth Day: August 2 Cars: 4Runner Nanu Shadow Residence: San Diego Birth Day: August 5 Cars: Jeep, 4Runner Lional Messi Residence: Barcelona Birth Day: January 30 Cars: Lamborghini, Maserati, Corvette Dan Mark Residence: San Francisco Birth Day: October 10 Cars: 2006 toyota sienna, 2011-Hellcat, 2003-Toyota Carolla . For Loop Iterate in a Reverse Order . for i in reversed(range(len(InfoDb))) : print_data(InfoDb[i]) . Dan Mark Residence: San Francisco Birth Day: October 10 Cars: 2006 toyota sienna, 2011-Hellcat, 2003-Toyota Carolla Lional Messi Residence: Barcelona Birth Day: January 30 Cars: Lamborghini, Maserati, Corvette Nanu Shadow Residence: San Diego Birth Day: August 5 Cars: Jeep, 4Runner Sunny Naidu Residence: Temecula Birth Day: August 2 Cars: 4Runner John Mortensen Residence: San Diego Birth Day: October 21 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac . List Other Methods -- reverse() . print(&quot;other methods that can be performed on lists: reverse()&quot;) InfoDb.reverse() while_loop() . other methods that can be performed on lists: reverse() While loop output Dan Mark Residence: San Francisco Birth Day: October 10 Cars: 2006 toyota sienna, 2011-Hellcat, 2003-Toyota Carolla Lional Messi Residence: Barcelona Birth Day: January 30 Cars: Lamborghini, Maserati, Corvette Nanu Shadow Residence: San Diego Birth Day: August 5 Cars: Jeep, 4Runner Sunny Naidu Residence: Temecula Birth Day: August 2 Cars: 4Runner John Mortensen Residence: San Diego Birth Day: October 21 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac . Add New Entry to List with User Input . def addNewToInfoDb(): #print(&quot;Enter a key:&quot;) key = input(&quot;Enter a key:&quot;) #print(&quot;Enter value:&quot;) value = input(&quot;Enter value:&quot;) InfoDb.append({key: value}) print(&quot;You added &quot; + key + &quot; : &quot; + str(value)) addNewToInfoDb() . You added breed : Labarador .",
            "url": "https://beebadger.github.io/fastpages/2022/09/05/lists-dictionaries.html",
            "relUrl": "/2022/09/05/lists-dictionaries.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post32": {
            "title": "Theme Changes to Midnight",
            "content": "Remote Theme . Changing remote theme for a moment . Theme – Frontpage look . Changing remote theme the frontpage looks like this with color changes on the picture below . Theme – tags looks . Changing remote theme the tags looks like this with style changes on the right picture below . Theme – Vocab looks . Changing remote theme the vocab looks like this with style and color changes on the right picture below . Theme – Issues encountered . The Fronpage looks off. Tags style completely changes. Vocab background erased and is all white. .",
            "url": "https://beebadger.github.io/fastpages/themes/week2/2022/09/05/Themes-Midnight-Changes.html",
            "relUrl": "/themes/week2/2022/09/05/Themes-Midnight-Changes.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post33": {
            "title": "Bash Tool Setup",
            "content": "Verify Tools have been installed . echo &quot;Checking python is installed&quot; if eval &quot;python --version&quot;; then echo &quot;Python is installed&quot; else echo &quot;Python is not installed&quot; fi echo &quot;Checking Conds is installed&quot; if eval &quot;conda --version&quot;; then echo &quot;Conda is installed&quot; else echo &quot;Conda is not installed&quot; fi echo &quot;Checking jupyter is installed&quot; if eval &quot;jupyter --version&quot;; then echo &quot;jupyter is installed&quot; else echo &quot;jupyter is not installed&quot; fi echo &quot;Checking javascript is installed&quot; if eval &quot;javascript --version&quot;; then echo &quot;javascript is installed&quot; else echo &quot;javascript is not installed&quot; fi . Checking python is installed004l Python 3.9.1204l Python is installed Checking Conds is installed conda 4.13.0004l Conda is installed Checking jupyter is installed Selected Jupyter core packages...[?2004l IPython : 8.2.0 ipykernel : 6.9.1 ipywidgets : 7.6.5 jupyter_client : 6.1.12 jupyter_core : 4.9.2 jupyter_server : 1.13.5 jupyterlab : 3.3.2 nbclient : 0.5.13 nbconvert : 6.4.4 nbformat : 5.3.0 notebook : 6.4.8 qtconsole : 5.3.0 traitlets : 5.1.1 jupyter is installed Checking javascript is installed javascript: command not found04l javascript is not installed . . Update repository with Bash . #go to the git directory cd /pwd/../../ #make changes to files and then add git add . #commit git commit -m &quot;fake update&quot; #update git push origin master . Automate Installation!! . echo &quot;installing Jupyter bash kernel&quot; pip install bash_kernel python -m bash_kernel.install echo &quot;Installation complete&quot; .",
            "url": "https://beebadger.github.io/fastpages/jupyter/2022/08/29/bash-tool-setup.html",
            "relUrl": "/jupyter/2022/08/29/bash-tool-setup.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post34": {
            "title": "AP Environmental Science!!",
            "content": "AP Environmental Science . Lab: Tragedy of the Commons Fishing Contest . Purpose . The purpose of this simulation is to demonstrate how individuals might utilize one of more common resources and the potential result(s) of various resource use approaches. . Materials Fishing tools (straws, chopsticks, or something similar) nothing spoon or fork-like! Common Pond (sheet of paper, or desk) Private Pond (optional) Fish (6 of each of four types of “fish”–for example, 6 sour worms, 6 regular M&amp;Ms, 6 gummi bears and 6 candied oranges) . Procedure . Work in groups of 3 or 4 (with distance learning, you can either get family members/others living in your household (best option) or take on the role of all fisherpersons separately by yourself). Each group will begin this exercise with 24 “fish.” This start total of 24 is to be comprised of six fish each of four different types. For example, 6 sour worms, 6 regular M&amp;Ms, 6 gummi bears and 6 candied oranges. . Each fisherperson needs two straws (or chopsticks). Hands may not be used during the fishing process; that is poaching. It is illegal. You will lose your boat (or computer), job, fishing license, your entire harvest will be distributed to others. Remember, people who make good choices don’t break the law. Each fish has a current market value (again fish types may vary) . . CONCLUSIONS . Discuss any significant trends illustrated in carrying out this exercise. . At the beginning of the experiment me and my group realized that is much easier to catch fish and sell them due to an abundance of fish. At the end of the experiment, due to the overfishing of fish the population had declined and it was harder to catch anything. . Did your fishing group talk about the harvesting approach that would be taken during each season? What was your decision if one was reached? . Our fishing group talked about the harvesting approach that would be taken during each season. Our decision after the discussion was that we would incorporate a law that would only allow us to catch a certain amount of fish every time we fished. This fishing policy would make the fish to have enough time to repopulate and get back to their correct population. . Compare your group’s results with the other groups. Explain whether or not you think your group was successful in using the ocean’s resources in a sustainable manner. . After comparing our groups data to other groups - we realize that our group ( alont with many of the other groups) did not use the pond resources to keep the pond fishes sustainable. We realized that we have overfished and as a result to that the fish population has decreased gradually. The overfishing made it more harder to fish and resluted in less abundance of fish in the pond. We were not successful in using the pond resources in a sustainable manner. .",
            "url": "https://beebadger.github.io/fastpages/apes/week1/2022/08/29/AP-Environmental-Science.html",
            "relUrl": "/apes/week1/2022/08/29/AP-Environmental-Science.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post35": {
            "title": "Python Quiz and Hacks",
            "content": "Python Quiz and Hacks . This is the quiz that I have made regarding American Football as well as Mr.Mortinson&#39;s questions. . import getpass, sys # imports library/ code from site import ENABLE_USER_SITE # imports from a site def question_and_answer(prompt): # defines question_and_answer print(&quot;Question: &quot; + prompt) # asks question msg = input() # get input print(&quot;Answer: &quot; + msg) # prints answer def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input() return msg questions = 8 # declaring variables correct = 0 wrong = 0 print(&#39;Hey there!, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) # program logic beggins print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) question_and_answer(&quot;Are you ready to take a test?&quot;) # first question begins rsp = question_with_response(&quot;Who was the quarterback for the Patriots 7 years ago?&quot;) # second question if rsp == &quot;Tom Brady&quot;: # if statement starts print(rsp + &quot; Good Job!&quot;) correct += 1 # adds 1 to correct variable elif rsp == &quot;Mac Jones&quot;: # else if statement print(rsp + &quot; is the current quarterback, the question asked for 7 years ago.&quot;) wrong += 1 # adds 1 to wrong variable else: # else statement print(&quot;Your answer of &quot; + rsp + &quot; is incorrect! Here is another question.&quot;) wrong += 1 rsp = question_with_response(&quot;Who is the current quarterback for the Patriots?&quot;) # third question if rsp == &quot;Mac Jones&quot;: print(rsp + &quot; is the current quarterback for the New England Patriots!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) wrong += 1 rsp = question_with_response(&quot;What position does Aaron Rodgers play?&quot;) # fourth question if rsp == &quot;Quarterback&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) wrong += 1 rsp = question_with_response(&quot;Who is the owner of the Patriots football team?&quot;) # fifth question if rsp == &quot;Robert Kraft&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) wrong += 1 rsp = question_with_response(&quot;What is the name of the most popular football video game?&quot;) #sixth question if rsp == &quot;Madden&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) wrong += 1 rsp = question_with_response(&quot;What command is used to include other functions that are developed?&quot;) #Teachers Questions if rsp == &quot;import&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;What command in this example is used to evaluate a response?&quot;) if rsp == &quot;if&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition?&quot;) if rsp == &quot;expression&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) percent = (correct/questions) * 100 # finding a perctage print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions) + &quot;. You got &quot; + str(wrong) + &quot; questions wrong. Your percentage on this quiz is &quot; + str(percent) + &quot;%.&quot;) # printing out the score and percentage . Hey there!, root running /bin/python3 You will be asked 8 questions. Question: Are you ready to take a test? Answer: Yes! Question: Who was the quarterback for the Patriots 7 years ago? Tom Brady Good Job! Question: Who is the current quarterback for the Patriots? Tom Brady is incorrect! Question: What position does Aaron Rodgers play? Quarterback is correct! Question: Who is the owner of the Patriots football team? Quarterback is incorrect! Question: What is the name of the most popular football video game? Madden is correct! Question: What command is used to include other functions that are developed? import is correct! Question: What command in this example is used to evaluate a response? if is correct! Question: Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition? expression is correct! root you scored 6/8. You got 2 questions wrong. Your percentage on this quiz is 75.0%. .",
            "url": "https://beebadger.github.io/fastpages/2022/08/28/python-hacks.html",
            "relUrl": "/2022/08/28/python-hacks.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post36": {
            "title": "Python Quiz and Hacks For Extra Credit",
            "content": "Python Quiz and Hacks For Extra Credit . This is the quiz that I have made regarding American Football as well as Mr.Mortinson&#39;s questions. . import getpass, sys # imports library/ code from site import ENABLE_USER_SITE # imports from a site def question_and_answer(prompt): # defines question_and_answer # definition print(&quot;Question: &quot; + prompt) # asks question msg = input() # get input print(&quot;Answer: &quot; + msg) # prints answer questions = 8 # declaring variables correct = 0 wrong = 0 def question_with_response(prompt,answer): # definition of optimized function print(&quot;Question: &quot; + prompt) rsp = input() global correct, wrong # use global variables if rsp == answer: print(&quot;Correct respose&quot;) correct += 1 else: print(&quot;Incorrect response!&quot;) wrong += 1 print(&#39;Hey there!, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) # program logic beggins print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) question_and_answer(&quot;Are you ready to take a test?&quot;) # first question begins # definition of arrray with two strings array=[ [&quot;Who was the quarterback for the Patriots 7 years ago?&quot;,&quot;Tom Brady&quot;], [&quot;Who is the current quarterback for the Patriots?&quot;,&quot;Mac Jones&quot;], [&quot;What position does Aaron Rodgers play?&quot;,&quot;Quarterback&quot;], [&quot;Who is the owner of the Patriots football team?&quot;,&quot;Robert Kraft&quot;], [&quot;What is the name of the most popular football video game?&quot;,&quot;Madden&quot;], [&quot;What command is used to include other functions that are developed?&quot;,&quot;import&quot;], [&quot;What command in this example is used to evaluate a response?&quot;,&quot;if&quot;], [&quot;Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition?&quot;,&quot;expression&quot;] ] for rows in array: question_with_response(rows[0],rows[1]) # third question # percent calculation percent = (correct/questions) * 100 # finding a perctage print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions) + &quot;. You got &quot; + str(wrong) + &quot; questions wrong. Your percentage on this quiz is &quot; + str(percent) + &quot;%.&quot;) # printing out the score and percentage . Hey there!, root running /bin/python3 You will be asked 8 questions. Question: Are you ready to take a test? Answer: Yes Question: Who was the quarterback for the Patriots 7 years ago? Incorrect response! Question: Who is the current quarterback for the Patriots? Incorrect response! Question: What position does Aaron Rodgers play? Correct respose Question: Who is the owner of the Patriots football team? Incorrect response! Question: What is the name of the most popular football video game? Correct respose Question: What command is used to include other functions that are developed? Correct respose Question: What command in this example is used to evaluate a response? Correct respose Question: Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition? Correct respose root you scored 5/8. You got 3 questions wrong. Your percentage on this quiz is 62.5%. .",
            "url": "https://beebadger.github.io/fastpages/2022/08/28/python-hacks-extra-credit.html",
            "relUrl": "/2022/08/28/python-hacks-extra-credit.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post37": {
            "title": "I Love My Dog",
            "content": ". This is a photo of my dog, Shadow, he is 8 years old. I love walking with him and playing with him in my backyard. I also love to take him to the dog park as well as the dog beach to play with all the other dogs. . Shadow with stick . . Shadow with bone . . Shadow enjoying view . . Shadow at sunset!! . . Shadow perfect sunset!!! . .",
            "url": "https://beebadger.github.io/fastpages/markdown/week1/2022/08/28/Dog-photo.html",
            "relUrl": "/markdown/week1/2022/08/28/Dog-photo.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post38": {
            "title": "Apes Class Material",
            "content": "Name Navan Yatavelli . Lab: Tragedy of the Commons . Fishing Contest . APES . Inspired by Ben Smith, modified by Andy Milbauer . Purpose . The purpose of this simulation is to demonstrate how individuals might utilize one of more common resources and the potential result(s) of various resource use approaches. . Materials . Fishing tools (straws, chopsticks, or something similar) nothing spoon or fork-like! . | Common Pond (sheet of paper, or desk) . | Private Pond (optional) . | Fish (6 of each of four types of “fish”–for example, 6 sour worms, 6 regular M &amp;Ms, 6 gummi bears and 6 candied oranges) . | . Procedure . Work in groups of 3 or 4 (with distance learning, you can either get family members/others living in your household (best option) or take on the role of all fisherpersons separately by yourself). . | Each group will begin this exercise with 24 “fish.” This start total of 24 is to be comprised of six fish each of four different types. For example, 6 sour worms, 6 regular M &amp;Ms, 6 gummi bears and 6 candied oranges. . . | Each fisherperson needs two straws (or chopsticks). . | Hands may not be used during the fishing process; that is poaching. It is illegal. You will lose your boat (or computer), job, fishing license, your entire harvest will be distributed to others. Remember, people who make good choices don’t break the law. . | Each fish has a current market value (again fish types may vary) . Sour Worms = $10.00 M &amp;Ms = $4.00 . | Gummi bears = $6.00 Gummi Oranges = $2.00 . | . | Each student must catch ONE FISH per fishing season in order to stay in business. IT IS UP TO EACH FISHERPERSON AND/OR EACH FISHING GROUP TO DECIDE HOW MANY, BEYOND THE REQUIRED ONE PER PERSON, FISH WILL BE HARVESTED. . | Each fishing season will last 15 seconds. . | At the end of each season, one fish (OF THE SAME SPECIES) will be added for every fish remaining in the “water commons.” . Assume fish reproduce through mitosis . | . | PRIVATE POND (optional): You may carry out this exercise with each “fisherperson” having a small paper plate, salsa cup, or paper towel to represent a small, privately-owner pond in which fish are placed to start the simulation. These fish can also reproduce if they haven’t been harvested. . | To colonize this pond place you must first catch fish from the common water and place part of this catch in your private pond. YOU WILL NEED TO EAT AT LEAST ONE FISH EACH SEASON TO KEEP THE YOUR BUSINESS FINANCIALLY VIABLE. . | Each fisherperson may choose to harvest fish from the “common water” or their private lake, still needing at least one fish per season to stay in business. The “restocking” procedure at the conclusion of each fishing season remains the same: one “new” fish of the same “species” is added for every two fish of that species remaining. . | What happens when BALDMAN (the company/person that restocks fish) runs out of fish? You depleted the fishery capability of that species . | See the fish, be the fish… . | Data . TOTAL NUMBER OF FISH CAPTURED (This is ONLY THE FISH YOU EAT, not private ponds) . | fisherperson Year 1 Year 2 Year 3 Year 4 Year 5 Year 6 . William | 2 | 1 | 0 | 5 | 3 | 1 | . Payton | 5 | 3 | 1 | 5 | 5 | 3 | . Navan | 6 | 2 | 7 | 6 | 5 | 2 | .   |   |   |   |   |   |   | . Total # | 13 | 6 | 8 | 16 | 13 | 6 | . TOTAL VALUE OF FISH CAPTURED (calculate dollar amount of each catch, this is ONLY THE FISH YOU EAT, not private ponds) . | fisherperson Year 1 Year 2 Year 3 Year 4 Year 5 Year 6 . William | $12 | $4 | $0 | $34 | $14 | $6 | . Payton | $15 | $8 | $4 | $40 | $26 | $26 | . Navan | $24 | $2 | $60 | $42 | $38 | $20 | .   |   |   |   |   |   |   | . Total value | $51 | $14 | $64 | $116 | $73 | $52 | . TOTAL HARVEST FOR 6 YEARS . | fisherperson # fish Value of fish . William | 12 | $70 | . Payton | 22 | $119 | . Navan | 28 | $188 | .   |   |   | . 6 year totals | 62 | $377 | . CONCLUSIONS(yes, everyone needs to answer these for full credit), Don’t spend more than 20 minutes on these questions. . Discuss any significant trends illustrated in carrying out this exercise. . | At the beginning of the experiment me and my group realized that is much easier to catch fish and sell them due to an abundance of fish. At the end of the experiment, due to the overfishing of fish the population had declined and it was harder to catch anything. . Did your fishing group talk about the harvesting approach that would be taken during each season? What was your decision if one was reached? . | Our fishing group talked about the harvesting approach that would be taken during each season. Our decision after the discussion was that we would incorporate a law that would only allow us to catch a certain amount of fish every time we fished. This fishing policy would make the fish to have enough time to repopulate and get back to their correct population. . Compare your group’s results with the other groups. Explain whether or not you think your group was successful in using the ocean’s resources in a sustainable manner. . | After comparing our groups data to other groups - we realize that our group ( alont with many of the other groups) did not use the pond resources to keep the pond fishes sustainable. We realized that we have overfished and as a result to that the fish population has decreased gradually. The overfishing made it more harder to fish and resluted in less abundance of fish in the pond. We were not successful in using the pond resources in a sustainable manner. .",
            "url": "https://beebadger.github.io/fastpages/2022/08/28/APES-Class-Material.html",
            "relUrl": "/2022/08/28/APES-Class-Material.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post39": {
            "title": "Ap Economics",
            "content": "Question 1: . Define Economics, explaining the Economic Problem. . Economics is a social science which looks at how resources are allocated and is the study of who gets the resources. Scarcity is an economic problem. People have wants and needs but the resources to fulfill those needs and wants are limited. Therefore, society has to come up with systems that determine who gets what. . Question 2: . List and define the four Factors of Production. . Four Factors of Production(FOPs) are: Land, labor, capital and entrepreneurship. . Land: This refers to natural resources. Examples are water, minerals, trees and oil. . Labor: This refers to work people do in the production of goods and services. Examples are factory workers, teachers, waiters, farmers . Capital: This refers to man-made factors of production. Examples are machinery, tools, equipment, factories, road, and harbors used in the production process. . Entrepreneurship: This refers to those risk-takers who organize the factors of production into goods and services. . Question 3: . Explain the difference between tradeoffs and opportunity costs, using the example of eating food. . Trade offs are used when you need to sacrifice an object in order to gain another object. For example, in order to make oreo icecream you need to crush Oreos (that you already have and could eat plain) into the icecream. But instead of eating just plain Oreos you gave them up in order to make the Oreo icecream, you can no longer eat the oreos that you once had. In opportunity costs, you never had the oreos, you could either make the oreos or a chocolate chip cookie using batter. If you decide to make the cookies the opportunity cost are the oreos,unlike the tradeoff where you had the oreos to begin with. . Question 4: . The following table represents the combinations of goods that Bakeryland can make using its resources. Use this information to answer the questions that follow: .   A B C D E F G . Cookies | 12 | 10 | 8 | 6 | 4 | 2 | 0 | . Cupcakes | 0 | 1 | 2 | 3 | 4 | 5 | 6 | . Create a diagram of this data with cookies on the vertical axis and cupcakes on the horizontal axis. . | . Assume Bakeryland is currently producing at point A, 12 cookies and 0 cupcakes. . What is the opportunity cost of increasing the production of cupcakes from 0 to 1? The loss of __2___ cookies. . | What is the opportunity cost of increasing the production of cupcakes from 1 to 2? The loss of __2____ cookies. . | What is the opportunity cost of moving from C to D? 2 cookies . | What is the opportunity cost of moving from D to E? 2 cookies . | What is the opportunity cost of moving from F to G? 2 cookies . | | c. Is this is an example of constant or increasing opportunity costs? . This is an example of constant opportunity costs . Question 5 . The following table represents the combinations of goods that Strangeland can make using its resources. Use this information to answer the questions that follow: .   A B C D . Robots | 12 | 10 | 6 | 0 | . Cheese | 0 | 1 | 2 | 3 | . Create a diagram of this data with robots on the vertical axis and cheese on the horizontal axis. . | . Assume Strangeland is currently producing at point A, 12 robots and 0 units of cheese. . The opportunity cost of increasing production of cheese from 0 to 1 unit is the loss of _2___ units of robots. . | The opportunity cost of increasing production of cheese from 1 unit to 2 units is the loss of ___4____ units of robots. . | The opportunity cost of moving from point C to point D is ______6 units of robots_______. . | | c. Is this is an example of constant or increasing opportunity costs? . This is an example of increasing opportunity costs . Question 6 . In the example in question 5 above, if point F lies outside of the PPC, what does this tell you? . If point F lies outside of the PPC, then we need increasing supply of resources, which cannot be attained with the existing resources . Question 7 . In the example in question 5 above, if point G lies inside of the PPC, what does this tell you? . If point G lies inside the PPC, it shows unemployment and idle factors of production . Question 8 . Draw a PPC for Donuts and Cell Phones, showing changes for each of the following conditions: . New technology makes factories more productive. . | Increases production possibilities for both the doughnut and the phones . . There’s a decrease in the demand for donuts. . | A change in demand does not shift the curve . . Dairy farmers go out of business, and butter is a resource for donuts. . | A shift inward only for doughnuts . . Many workers are unemployed. . | Curve does not shift. Unemployment is just a point inside the curve . . Workers receive improved healthcare. . | Quality of workers improved and the curve shift outward . . Question 9 . Explain the difference between productive efficiency and allocative efficiency. . Productive efficiency is possible combinations of goods a country can produce given its available resources. Any point on the PPC curve is productively efficient. Allocative efficiency is optimal distribution of goods and services. For this, we need to know what combination of the two goods society most wants. . Question 10 . How is economic growth shown on a PPC? Explain. . Economic growth is shown when the PPC curve is shifted outward. This shows how there is a higher demand for both products because of increase in people’s affordability.. Higher affordability shows higher economic growth. .",
            "url": "https://beebadger.github.io/fastpages/2022/08/28/AP-Economics.html",
            "relUrl": "/2022/08/28/AP-Economics.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post40": {
            "title": "Jupyter Notebook & Python Code",
            "content": "Printing &quot;DNHS!&quot; Using Python . print(&quot;Hello&quot;) print(&quot;DNHS!&quot;) . Hello DNHS! .",
            "url": "https://beebadger.github.io/fastpages/2022/08/21/Firstnotebook.html",
            "relUrl": "/2022/08/21/Firstnotebook.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post41": {
            "title": "Beebadger's Markdown Post",
            "content": "Hello All . My First Markdown Page . DNHS is fun place!!! . What I like . I like Sports!!! . Favorite Things: Color: Blue Sport: Football . Code Things . print(&quot;DNHS is really really Fun place!!:&quot;) .",
            "url": "https://beebadger.github.io/fastpages/markdown/week0/2022/08/21/FirstMD.html",
            "relUrl": "/markdown/week0/2022/08/21/FirstMD.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post42": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://beebadger.github.io/fastpages/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post43": {
            "title": "Markdown Post!!",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://beebadger.github.io/fastpages/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "Submenu",
          "content": "&lt;!DOCTYPE html&gt; . . This is the new _pages with Submenu added. . The FIRST link from submenu to Jupyter Notebook that shows personal usage of Jupyter JavaScript kernel | The SECOND link from submenu to a regular Post that uses HTML fragments and JavaScript data to build a table | . . . Please pick the below Dropdown items... . Dropdown Jupyter Notebook with JavaScript Post with HTML/JavaScript .",
          "url": "https://beebadger.github.io/fastpages/submenu/",
          "relUrl": "/submenu/",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "About Me",
          "content": "Hello – This is Beebadger!!! .",
          "url": "https://beebadger.github.io/fastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
      ,"page8": {
          "title": "Vocab",
          "content": "Vocab . A collection of vocabulary this trimester . Basic Terms . Variable: A value that changes based off of conditions Statement: A simple programing statement . File Types . .html: Used for designing webpages .md: Also used for basic webpage design and can be used with python .ipynb: Uses a combination of python and .md .py: a python file .",
          "url": "https://beebadger.github.io/fastpages/vocab/",
          "relUrl": "/vocab/",
          "date": ""
      }
      
  

  
  

  
  

  
  

  

  

  
  

  
      ,"page15": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://beebadger.github.io/fastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}